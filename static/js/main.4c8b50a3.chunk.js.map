{"version":3,"sources":["components/models/Mesh.js","components/models/BaseModel.js","components/models/phone.gltf","components/models/Phone.js","components/scene/MockupScene.js","components/scene/Scene.js","App.js","reportWebVitals.js","index.js"],"names":["MockupMesh","color","metalness","roughness","img","geometry","selectable","selected","setSelected","matRef","useRef","imgInpRef","colorInpRef","useState","borderColor","setBorderColor","metalnessInpRef","roughnessInpRef","imgUrl","setImgUrl","hovering","setHovering","updateImageUrl","evt","a","file","target","files","type","arrayBuffer","buffer","blob","Blob","urlCreator","window","URL","webkitURL","imageUrl","createObjectURL","useEffect","document","body","classList","add","remove","uuid","current","r","g","b","componentToHex","rgbToHex","Math","floor","value","checked","Boolean","TextureLoader","load","tex","flipY","encoding","THREE","map","needsUpdate","anisotropy","onPointerOver","stopPropagation","onPointerLeave","onClick","setTimeout","onPointerMissed","castShadow","receiveShadow","ref","side","emissive","emissiveIntensity","Html","position","boundingBox","max","className","onChange","set","hexToRgb","style","backgroundColor","min","step","hex","replace","m","result","exec","parseInt","c","toString","length","BaseModel","props","tool","selectedUid","setSelectedUid","dispose","children","meshData","undefined","mat","material","name","includes","Phone","useGLTF","PhoneModel","nodes","materials","Buttons","Flash","Bezel","Body","Lenses","Screen","preload","MockupScene","groundShadows","objectShadows","doDownload","setDoDownload","width","height","isCamSet","setIsCamSet","useFrame","state","gl","domElement","toDataURL","link","createElement","href","download","click","downloadImage","camera","Stage","contactShadow","shadows","adjustCamera","intensity","environment","preset","Scene","setGroundShadows","setObjectShadows","fov","setFov","orbitEnabled","setOrbitEnabled","hasAlpha","setHasAlpha","setColor","widthInpRef","heightInpRef","canvasRef","cameraRef","toolIndex","setToolIndex","shorcutPressed","codes","code","setBackgroundColor","getElementsByClassName","setCameraSize","elem","xScale","innerWidth","yScale","innerHeight","scale","transform","addEventListener","removeEventListener","bottom-tooltip","size","fallback","colorManagement","shadowMap","preserveDrawingBuffer","OrbitControls","makeDefault","enabled","PerspectiveCamera","near","far","attach","args","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4c8b50a3.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\r\nimport { TextureLoader } from 'three'\r\nimport { Html } from '@react-three/drei'\r\nimport * as THREE from \"three\";\r\n\r\nimport { hexToRgb, rgbToHex } from './BaseModel';\r\n\r\nimport \"./Popup.css\";\r\n\r\n\r\nexport default function MockupMesh ({ color=\"FFFFFF\", metalness=0, roughness=0.2, img=null, geometry=null, selectable=true,selected, setSelected }) {\r\n\r\n  const matRef = useRef()\r\n  const imgInpRef = useRef()\r\n  const colorInpRef = useRef()\r\n  const [borderColor, setBorderColor] = useState(\"white\")\r\n  const metalnessInpRef = useRef()\r\n  const roughnessInpRef = useRef()\r\n\r\n  const [imgUrl, setImgUrl] = useState(img)\r\n  const [hovering, setHovering] = useState(false)\r\n\r\n\r\n  const setMeshColor = () => { matRef.current.color.set( hexToRgb(colorInpRef.current.value) ); setBorderColor(colorInpRef.current.value) }\r\n  const setMeshMetalness = () => { matRef.current.metalness = metalnessInpRef.current.checked ? 1 : 0 }\r\n  const setMeshRoughness = () => { matRef.current.roughness = roughnessInpRef.current.value }\r\n\r\n\r\n  const updateImageUrl = async (evt) => {\r\n    const file = evt.target.files[0]\r\n    const { type } = file\r\n    const buffer = await file.arrayBuffer()\r\n    const blob = new Blob([buffer], { type })\r\n    const urlCreator = window.URL || window.webkitURL\r\n    const imageUrl = urlCreator.createObjectURL(blob)\r\n    setImgUrl(imageUrl)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (hovering) { document.body.classList.add(\"pointing\") }\r\n    else { document.body.classList.remove(\"pointing\") }\r\n  }, [hovering])\r\n\r\n\r\n  useEffect(() => {\r\n    if (selected === geometry.uuid) {\r\n      const {r,g,b} = matRef.current.color\r\n      let color = rgbToHex(Math.floor(r*255),Math.floor(g*255),Math.floor(b*255))\r\n      colorInpRef.current.value = color\r\n      setBorderColor(color)\r\n      metalnessInpRef.current.checked = Boolean(matRef.current.metalness)\r\n      roughnessInpRef.current.value = matRef.current.roughness\r\n    }\r\n  }, [selected])\r\n\r\n\r\n  useEffect(() => {\r\n    if (imgUrl) {\r\n      if (typeof(imgUrl) === typeof(\"\")) {\r\n          const textureLoader = new TextureLoader()\r\n          textureLoader.load(imgUrl, (tex) => {\r\n            tex.flipY = false\r\n            tex.encoding = THREE.sRGBEncoding\r\n            matRef.current.map = tex\r\n            matRef.current.needsUpdate = true\r\n          })\r\n      }\r\n      else {\r\n        imgUrl.anisotropy = 32\r\n        matRef.current.map = imgUrl\r\n      }\r\n    }\r\n  }, [imgUrl])\r\n\r\n  return (\r\n    <>\r\n    <group>\r\n      <mesh\r\n        onPointerOver={(evt)=>{\r\n          if (selectable) {\r\n            setHovering(true)\r\n            evt.stopPropagation()\r\n          }\r\n        }}\r\n        onPointerLeave={(evt)=>{\r\n          if (hovering) {\r\n            setHovering(false)\r\n            // evt.stopPropagation()\r\n          }\r\n        }}\r\n\r\n        onClick={(evt)=>{\r\n          setTimeout(() => {\r\n            selectable && setSelected(geometry.uuid)\r\n          }, 20);\r\n          evt.stopPropagation()\r\n        }}\r\n        onPointerMissed={(evt)=>{\r\n          setSelected(null)\r\n          evt.stopPropagation()\r\n        }}\r\n\r\n        castShadow\r\n        receiveShadow\r\n        geometry={geometry}\r\n      >\r\n        <meshStandardMaterial\r\n          ref={matRef}\r\n          color={color}\r\n          side={THREE.DoubleSide}\r\n          metalness={metalness}\r\n          roughness={roughness}\r\n          emissive={hovering ? \"orange\" : \"white\"}\r\n          emissiveIntensity={hovering ? 5 : 0}\r\n        />\r\n      </mesh>\r\n\r\n      {selected === geometry.uuid && <Html position={geometry.boundingBox.max}>\r\n        <div className=\"materialPopup\">\r\n          <p>Color</p>\r\n          <input type=\"color\" ref={colorInpRef} onChange={setMeshColor} style={{backgroundColor:borderColor}} />\r\n          {img && <>\r\n            <p>Image</p>\r\n            <input type=\"file\" ref={imgInpRef} onChange={updateImageUrl} />\r\n          </>}\r\n          <p>Metal</p>\r\n          <input type=\"checkbox\" ref={metalnessInpRef} onChange={setMeshMetalness} />\r\n          <p>Roughness</p>\r\n          <input type=\"range\" ref={roughnessInpRef} min=\"0\" max=\"1\" step={0.01} onChange={setMeshRoughness} />\r\n        </div>\r\n      </Html>}\r\n\r\n    </group>\r\n    </>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport * as THREE from \"three\";\r\n\r\nimport MockupMesh from './Mesh';\r\n\r\n\r\nexport const hexToRgb = (hex) => {\r\n  // https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n  hex = hex.replace(shorthandRegex, function(m, r, g, b) {\r\n    return r + r + g + g + b + b;\r\n  });\r\n\r\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return `rgb(${parseInt(result[1], 16)}, ${parseInt(result[2], 16)}, ${parseInt(result[3], 16)})`\r\n}\r\n\r\nfunction componentToHex(c) {\r\n  var hex = c.toString(16);\r\n  return hex.length == 1 ? \"0\" + hex : hex;\r\n}\r\n\r\nexport function rgbToHex(r, g, b) {\r\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\n\r\nexport default function BaseModel(props) {\r\n  const { tool } = props\r\n    \r\n  const [selectedUid, setSelectedUid] = useState(null)\r\n\r\n  return (\r\n    <group {...props} dispose={null} >\r\n      {props.children.map(meshData => {\r\n        if (meshData.props.geometry === undefined) return\r\n\r\n        const mat = meshData.props.material\r\n        return <MockupMesh\r\n                  key={meshData.props.geometry.uuid}\r\n                  geometry={meshData.props.geometry}\r\n                  color={mat.map ? new THREE.Color(\"rgb(127,127,127)\") : mat.color}\r\n                  metalness={mat.metalness}\r\n                  roughness={mat.roughness}\r\n                  img={mat.map}\r\n                  selectable={mat.name.includes(\".editable\") && tool===\"materials\"}\r\n                  selected={selectedUid}\r\n                  setSelected={setSelectedUid}\r\n                />\r\n      })}\r\n    </group>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/phone.470c412e.gltf\";","import React from 'react'\r\nimport { useGLTF } from '@react-three/drei'\r\nimport BaseModel from './BaseModel'\r\n\r\nimport PhoneModel from './phone.gltf'\r\n\r\nexport default function Phone(props) {\r\n\r\n  const { nodes, materials } = useGLTF(PhoneModel)\r\n\r\n  return (\r\n    <BaseModel {...props} >\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Buttons.geometry}\r\n        material={materials['Buttons.editable']}\r\n      />\r\n      <mesh castShadow receiveShadow geometry={nodes.Flash.geometry} material={materials.Flash} />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Bezel.geometry}\r\n        material={materials['Bezel.editable']}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Body.geometry}\r\n        material={materials['Body.editable']}\r\n      />\r\n      <mesh castShadow receiveShadow geometry={nodes.Lenses.geometry} material={materials.Lenses} />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Screen.geometry}\r\n        material={materials['Screen.editable']}\r\n      />\r\n    </BaseModel>\r\n  )\r\n}\r\n\r\nuseGLTF.preload(PhoneModel)","import React, { useState, useEffect } from 'react'\r\n\r\nimport { useFrame, useThree } from '@react-three/fiber'\r\nimport { Stage } from '@react-three/drei'\r\n\r\nimport Phone from '../models/Phone'\r\n\r\n\r\nfunction MockupScene({ groundShadows, objectShadows, doDownload, setDoDownload, width, height, tool }) {\r\n\r\n  const [isCamSet, setIsCamSet] = useState(false)\r\n\r\n  const downloadImage = (state) => {\r\n    if (!doDownload) return\r\n    \r\n    const img = state.gl.domElement.toDataURL()\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.href = img;\r\n    link.download = `mockup_${width}x${height}.png`;\r\n    link.click();\r\n\r\n    setDoDownload(false)\r\n  }\r\n\r\n  useFrame((state) => downloadImage(state))\r\n\r\n  useFrame(({camera}) => {\r\n    if (isCamSet) return\r\n    camera.position.set(-0.25, 0.25, 0.7)\r\n    setIsCamSet(true)\r\n  })\r\n\r\n  return (\r\n    <scene>\r\n        <Stage contactShadow={groundShadows} shadows={objectShadows} adjustCamera intensity={1} environment=\"city\" preset=\"soft\" >\r\n\r\n          <Phone tool={tool} />\r\n\r\n        </Stage>\r\n    </scene>\r\n  );\r\n}\r\n\r\n\r\nexport default MockupScene;","import React, { useState, useRef, useEffect, Suspense } from 'react'\r\n\r\nimport { Canvas } from '@react-three/fiber'\r\nimport { OrbitControls, PerspectiveCamera } from '@react-three/drei'\r\n\r\nimport { FaCamera, FaTint, FaCube, FaCubes, FaLock, FaPlus, FaArrowsAlt, FaSyncAlt, FaCompress, FaFillDrip, FaHandPaper } from 'react-icons/fa';\r\n\r\nimport './Scene.css';\r\nimport MockupScene from './MockupScene';\r\n\r\n\r\nfunction Scene() {\r\n\r\n  const [doDownload, setDoDownload] = useState(false)\r\n\r\n  // VIEW SETTINGS\r\n  const [groundShadows, setGroundShadows] = useState(false)\r\n  const [objectShadows, setObjectShadows] = useState(true)\r\n\r\n  const [fov, setFov] = useState(0)\r\n\r\n  const [orbitEnabled, setOrbitEnabled] = useState(true)\r\n\r\n  const [hasAlpha, setHasAlpha] = useState(false)\r\n  const [color, setColor] = useState(\"\")\r\n  \r\n  const colorInpRef = useRef()\r\n  const widthInpRef = useRef()\r\n  const heightInpRef = useRef()\r\n\r\n  const canvasRef = useRef()\r\n  const cameraRef = useRef()\r\n\r\n  // TOOLS\r\n  const tools = [\"grab\", \"materials\", \"translate\", \"rotate\", \"scale\"]\r\n  const [toolIndex, setToolIndex] = useState(0)\r\n\r\n  const shorcutPressed = (evt) => {\r\n    const codes = {\r\n      \"Space\": 0,\r\n      \"Digit1\": 0,\r\n      \"KeyM\": 1,\r\n      \"KeyF\": 1,\r\n      \"Digit2\": 1,\r\n      \"KeyQ\": 2,\r\n      \"KeyG\": 2,\r\n      \"Digit3\": 2,\r\n      \"KeyW\": 3,\r\n      \"KeyR\": 3,\r\n      \"Digit4\": 3,\r\n      \"KeyE\": 4,\r\n      \"KeyS\": 4,\r\n      \"Digit5\": 4,\r\n    }\r\n    if (evt.code in codes) {\r\n      setToolIndex(codes[evt.code])\r\n    }\r\n  }\r\n  \r\n  const setBackgroundColor = () => {\r\n    document.getElementsByClassName(\"App\")[0].style.backgroundColor = colorInpRef.current.value\r\n    setColor(colorInpRef.current.value)\r\n    setHasAlpha(false)\r\n  }\r\n\r\n  const setCameraSize = () => {\r\n    const width = Math.max(1, widthInpRef.current.value)\r\n    const height = Math.max(1, heightInpRef.current.value)\r\n\r\n    const elem = document.getElementsByClassName(\"canvasContainer\")[0]\r\n    elem.style.width = `${width}px`\r\n    elem.style.height = `${height}px`\r\n    \r\n    const xScale = window.innerWidth / width\r\n    const yScale = window.innerHeight / height\r\n    let scale = Math.min(xScale, yScale)\r\n    scale = scale<1 ? scale-0.02 : 1\r\n\r\n    canvasRef.current.style.transform = `scale(${scale})`\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (hasAlpha) {\r\n      document.getElementsByClassName(\"App\")[0].classList.add(\"alpha\")\r\n      canvasRef.current.classList.add(\"alpha\")\r\n    } else {\r\n      document.getElementsByClassName(\"App\")[0].classList.remove(\"alpha\")\r\n      canvasRef.current.classList.remove(\"alpha\")\r\n    }\r\n  }, [hasAlpha])\r\n\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", setCameraSize)\r\n    window.addEventListener(\"keypress\", shorcutPressed)\r\n    \r\n    // set default camera size\r\n    widthInpRef.current.value = window.innerWidth-20\r\n    heightInpRef.current.value = window.innerHeight-20\r\n    \r\n    // set default fov\r\n    setFov(20)\r\n    \r\n    // set default background color\r\n    colorInpRef.current.value = \"#8A4CE6\"\r\n    setBackgroundColor()\r\n    \r\n    // set alpha default\r\n    setHasAlpha(true)\r\n    \r\n    setCameraSize()\r\n    \r\n    return () => {\r\n      window.removeEventListener(\"resize\", setCameraSize)\r\n      window.removeEventListener(\"keypress\", shorcutPressed)\r\n    }\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"sceneContainer\">\r\n\r\n      <div className=\"toolBtnsContainer\">\r\n        <button className={`iconToggle tool ${toolIndex===0&&\"active\"}`} onClick={() => setToolIndex(0)} bottom-tooltip=\"Drag (Space)\"><FaHandPaper color=\"white\" size={17} /></button>\r\n        <div className=\"dividerSmall\"></div>\r\n        <button className={`iconToggle tool ${toolIndex===1&&\"active\"}`} onClick={() => setToolIndex(1)} bottom-tooltip=\"Materials (M,F)\"><FaFillDrip color=\"white\" size={17} /></button>\r\n        <div className=\"dividerSmall\"></div>\r\n        {/* <button className={`iconToggle tool ${toolIndex===2&&\"active\"}`} onClick={() => setToolIndex(2)} bottom-tooltip=\"Move (Q,G)\"><FaArrowsAlt color=\"white\" size={17} /></button>\r\n        <button className={`iconToggle tool ${toolIndex===3&&\"active\"}`} onClick={() => setToolIndex(3)} bottom-tooltip=\"Rotate (W,R)\"><FaSyncAlt color=\"white\" size={17} /></button>\r\n        <button className={`iconToggle tool ${toolIndex===4&&\"active\"}`} onClick={() => setToolIndex(4)} bottom-tooltip=\"Scale (E,S)\"><FaCompress color=\"white\" size={17} /></button> */}\r\n      </div>\r\n\r\n      <div className=\"viewBtnsContainer\">\r\n        <button className={`iconToggle ${groundShadows&&\"active\"}`} onClick={() => setGroundShadows(!groundShadows)} bottom-tooltip=\"Ground Shadows\"><FaCube color=\"white\" size={17} /></button>\r\n        <button className={`iconToggle ${objectShadows&&\"active\"}`} onClick={() => setObjectShadows(!objectShadows)} bottom-tooltip=\"Object Shadows\"><FaCubes color=\"white\" size={17} /></button>\r\n        <div className=\"divider\"></div>\r\n        <button className={`iconToggle ${!hasAlpha&&\"active\"}`} onClick={() => setHasAlpha(!hasAlpha)} bottom-tooltip=\"Background\"><FaTint color=\"white\" size={17} /></button>\r\n        <input type=\"color\" onChange={setBackgroundColor} ref={colorInpRef} style={{backgroundColor: colorInpRef.current?.value}}></input> \r\n        <div className=\"divider\"></div>\r\n        <input type=\"number\" onChange={setCameraSize} ref={widthInpRef} />\r\n        <input type=\"number\" onChange={setCameraSize} ref={heightInpRef} />\r\n        <div className=\"divider\"></div>\r\n        <input type=\"range\" value={fov} min=\"10\" max=\"50\" step={2} onChange={(evt) => setFov(evt.target.value)} className=\"fovInp\" />\r\n        <button className={`iconToggle ${!orbitEnabled&&\"active\"}`} onClick={() => setOrbitEnabled(!orbitEnabled)} bottom-tooltip=\"Lock Drag\"><FaLock color=\"white\" size={17} /></button>\r\n      </div>\r\n\r\n      {/* <button className=\"addBtn\" onClick={() => {}}><FaPlus size={16} color=\"white\"/></button> */}\r\n\r\n      <button className=\"downloadBtn\" onClick={() => setDoDownload(true)}><FaCamera size={16} color=\"white\"/></button>\r\n\r\n      <div className=\"canvasContainer\">\r\n        <Suspense fallback={null}>\r\n          <Canvas colorManagement shadowMap shadows ref={canvasRef} gl={{ preserveDrawingBuffer: true }} >\r\n            <OrbitControls makeDefault enabled={orbitEnabled} />\r\n\r\n            <PerspectiveCamera makeDefault ref={cameraRef} fov={fov} near={0.0001} far={50} />\r\n\r\n            <MockupScene\r\n              groundShadows={groundShadows}\r\n              objectShadows={objectShadows}\r\n              doDownload={doDownload}\r\n              setDoDownload={setDoDownload}\r\n              width={widthInpRef.current ? widthInpRef.current.value : 0}\r\n              height={heightInpRef.current ? heightInpRef.current.value : 0}\r\n              tool={tools[toolIndex]}\r\n            />\r\n\r\n            {!hasAlpha && <color attach=\"background\" args={[color]} />}\r\n\r\n          </Canvas>\r\n        </Suspense>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Scene;","import React, { useState } from 'react';\nimport './App.css';\n\nimport Scene from './components/scene/Scene';\n\nfunction App () {\n\n  return (\n    <div className=\"App\">\n      \n      <Scene />\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}