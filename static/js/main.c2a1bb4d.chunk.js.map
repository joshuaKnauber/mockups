{"version":3,"sources":["components/scene/Environment.js","components/scene/Lighting.js","components/models/Mesh.js","components/models/BaseModel.js","components/models/mockups/phone.gltf","components/models/mockups/Phone.js","components/models/mockups/suzanne.gltf","components/models/mockups/Suzanne.js","components/scene/MockupScene.js","components/scene/Scene.js","App.js","reportWebVitals.js","index.js"],"names":["presets","pisa","folder","files","bridge2","milkyway","angus","Environment","preset","props","path","Lighting","shadows","light1","useRef","light2","light3","light4","ref","position","intensity","color","castShadow","MockupMesh","metalness","roughness","img","geometry","selectable","selected","setSelected","matRef","imgInpRef","colorInpRef","useState","borderColor","setBorderColor","metalnessInpRef","roughnessInpRef","imgUrl","setImgUrl","hovering","setHovering","updateImageUrl","evt","a","file","target","type","arrayBuffer","buffer","blob","Blob","urlCreator","window","URL","webkitURL","imageUrl","createObjectURL","useEffect","document","body","classList","add","remove","uuid","current","r","g","b","componentToHex","rgbToHex","Math","floor","value","checked","Boolean","TextureLoader","load","tex","flipY","encoding","THREE","map","needsUpdate","receiveShadow","onPointerEnter","stopPropagation","onPointerLeave","onClick","onPointerMissed","side","emissive","emissiveIntensity","Html","boundingBox","max","className","onChange","set","hexToRgb","style","backgroundColor","min","step","hex","replace","m","result","exec","parseInt","c","toString","length","BaseModel","tool","orbit","activeModel","setActiveModel","groupRef","transform","transformMode","setTransformMode","selectedMeshUid","setSelectedMeshUid","includes","controls","setMode","callback","event","enabled","addEventListener","removeEventListener","transformEnabled","meshes","React","Children","toArray","children","TransformControls","size","dispose","onPointerOver","meshData","undefined","mat","material","name","Phone","useGLTF","PhoneModel","nodes","materials","Buttons","Flash","Bezel","Body","Lenses","Screen","preload","Suzanne","SuzanneModel","MockupScene","groundShadows","objectShadows","orbitEnabled","doDownload","setDoDownload","width","height","mockups","useFrame","state","gl","domElement","toDataURL","link","createElement","href","download","click","downloadImage","fallback","OrbitControls","makeDefault","mockup","mockupProps","key","ContactShadows","rotation","PI","opacity","blur","far","attach","args","modelNames","phone","suzanne","Scene","setGroundShadows","setObjectShadows","fov","setFov","setOrbitEnabled","hasAlpha","setHasAlpha","setColor","setMockups","showAddModels","setShowAddModels","widthInpRef","heightInpRef","canvasRef","cameraRef","toolIndex","setToolIndex","shorcutPressed","codes","code","setBackgroundColor","getElementsByClassName","setCameraSize","elem","xScale","innerWidth","yScale","innerHeight","scale","addMockup","modelType","bottom-tooltip","Object","keys","marginRight","preserveDrawingBuffer","antialias","PerspectiveCamera","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c2a1bb4d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Environment as EnvironmentImpl } from '@react-three/drei'\r\n\r\nconst examplesURL = 'https://cdn.jsdelivr.net/gh/mrdoob/three.js@r123/examples/textures/cube/'\r\n\r\n// See https://github.com/mrdoob/three.js/tree/master/examples/textures/cube\r\nconst presets = {\r\n  pisa: {\r\n    folder: 'pisa',\r\n    files: ['px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png'],\r\n  },\r\n  bridge2: {\r\n    folder: 'Bridge2',\r\n    files: ['posx.jpg', 'negx.jpg', 'posy.jpg', 'negy.jpg', 'posz.jpg', 'negz.jpg'],\r\n  },\r\n  milkyway: {\r\n    folder: 'MilkyWay',\r\n    files: ['dark-s_px.jpg', 'dark-s_nx.jpg', 'dark-s_py.jpg', 'dark-s_ny.jpg', 'dark-s_pz.jpg', 'dark-s_nz.jpg'],\r\n  },\r\n  angus: {\r\n    folder: 'angus',\r\n    files: ['cube_m00_c00.jpg', 'cube_m00_c01.jpg', 'cube_m00_c02.jpg', 'cube_m00_c03.jpg', 'cube_m00_c04.jpg', 'cube_m00_c05.jpg'],\r\n  },\r\n}\r\n\r\nexport default function Environment({ preset, ...props }) {\r\n  const { folder, files } = presets[preset]\r\n  const path = examplesURL + folder + '/'\r\n  return <EnvironmentImpl files={files} path={path} {...props} />\r\n}","import React, { useRef } from \"react\"\r\nimport { PointLightHelper, HemisphereLightHelper, DirectionalLightHelper } from \"three\"\r\nimport { useHelper, softShadows } from \"@react-three/drei\"\r\n\r\n// softShadows()\r\n\r\nexport default function Lighting({ shadows }) {\r\n\r\n  const light1 = useRef()\r\n  const light2 = useRef()\r\n  const light3 = useRef()\r\n  const light4 = useRef()\r\n  \r\n  // useHelper(light1, DirectionalLightHelper, 1, \"orange\")\r\n  // useHelper(light2, DirectionalLightHelper, 1, \"blue\")\r\n  // useHelper(light3, DirectionalLightHelper, 1, \"white\")\r\n  // useHelper(light4, DirectionalLightHelper, 1, \"white\")\r\n\r\n  return (\r\n    <group>\r\n      {/* <ambientLight intensity={1} /> */}\r\n      <directionalLight\r\n        ref={light1}\r\n        position={[2, 3, 3]}\r\n        intensity={3}\r\n        color={\"orange\"}\r\n        castShadow={shadows}\r\n      />\r\n      <directionalLight\r\n        ref={light2}\r\n        position={[-2, 3, 3]}\r\n        intensity={3}\r\n        color={\"lightblue\"}\r\n      />\r\n      <directionalLight\r\n        ref={light3}\r\n        position={[2, 1, -3]}\r\n        intensity={4}\r\n        color={\"white\"}\r\n      />\r\n      <directionalLight\r\n        ref={light4}\r\n        position={[-2, 1, -3]}\r\n        intensity={4}\r\n        color={\"white\"}\r\n      />\r\n    </group>\r\n  )\r\n}\r\n  ","import React, { useRef, useState, useEffect } from 'react'\r\nimport { TextureLoader } from 'three'\r\nimport { Html } from '@react-three/drei'\r\nimport * as THREE from \"three\";\r\n\r\nimport { hexToRgb, rgbToHex } from './BaseModel';\r\n\r\nimport \"./Popup.css\";\r\n\r\n\r\nexport default function MockupMesh ({ color=\"FFFFFF\", metalness=0, roughness=0.2, img=null, geometry=null, selectable=true, selected, setSelected }) {\r\n\r\n  const matRef = useRef()\r\n  const imgInpRef = useRef()\r\n  const colorInpRef = useRef()\r\n  const [borderColor, setBorderColor] = useState(\"white\")\r\n  const metalnessInpRef = useRef()\r\n  const roughnessInpRef = useRef()\r\n\r\n  const [imgUrl, setImgUrl] = useState(img)\r\n  const [hovering, setHovering] = useState(false)\r\n\r\n\r\n  const setMeshColor = () => {\r\n    colorInpRef.current && matRef.current.color.set( hexToRgb(colorInpRef.current.value) );\r\n    colorInpRef.current && setBorderColor(colorInpRef.current.value)\r\n  }\r\n  const setMeshMetalness = () => { matRef.current.metalness = metalnessInpRef.current.checked ? 1 : 0 }\r\n  const setMeshRoughness = () => { matRef.current.roughness = roughnessInpRef.current.value }\r\n\r\n\r\n  const updateImageUrl = async (evt) => {\r\n    const file = evt.target.files[0]\r\n    const { type } = file\r\n    const buffer = await file.arrayBuffer()\r\n    const blob = new Blob([buffer], { type })\r\n    const urlCreator = window.URL || window.webkitURL\r\n    const imageUrl = urlCreator.createObjectURL(blob)\r\n    setImgUrl(imageUrl)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (hovering) { document.body.classList.add(\"pointing\") }\r\n    else { document.body.classList.remove(\"pointing\") }\r\n  }, [hovering])\r\n\r\n\r\n  useEffect(() => {\r\n    if (selected === geometry.uuid) {\r\n      if (colorInpRef.current) {\r\n        const {r,g,b} = matRef.current.color\r\n        let color = rgbToHex(Math.floor(r*255),Math.floor(g*255),Math.floor(b*255))\r\n        colorInpRef.current.value = color\r\n        setBorderColor(color)\r\n      } \r\n      metalnessInpRef.current.checked = Boolean(matRef.current.metalness)\r\n      roughnessInpRef.current.value = matRef.current.roughness\r\n    }\r\n  }, [selected])\r\n\r\n\r\n  useEffect(() => {\r\n    if (selected === geometry.uuid && !selectable) {\r\n      setSelected(null)\r\n    }\r\n  }, [selectable])\r\n\r\n\r\n  useEffect(() => {\r\n    if (typeof(imgUrl) === typeof(\"\")) {\r\n      const textureLoader = new TextureLoader()\r\n      textureLoader.load(imgUrl, (tex) => {\r\n        tex.flipY = false\r\n        tex.encoding = THREE.sRGBEncoding\r\n        matRef.current.map = tex\r\n        matRef.current.needsUpdate = true\r\n      })\r\n    }\r\n  }, [imgUrl])\r\n\r\n  \r\n  const startHover = (evt) => {\r\n    if (selectable) {\r\n      setHovering(true)\r\n      evt.stopPropagation()\r\n    }\r\n  }\r\n\r\n\r\n  const finishHover = (evt) => {\r\n    if (hovering) {\r\n      setHovering(false)\r\n      evt.stopPropagation()\r\n    }\r\n  }\r\n\r\n\r\n  const selectMesh = (evt) => {\r\n    if (hovering && selectable) {\r\n      setSelected(geometry.uuid)\r\n      evt.stopPropagation()\r\n    }\r\n  }\r\n\r\n\r\n  const deselectMesh = (evt) => {\r\n    if (selected === geometry.uuid) {\r\n      setSelected(null)\r\n      evt.stopPropagation()\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <group castShadow receiveShadow>\r\n      <mesh\r\n        onPointerEnter={startHover}\r\n        onPointerLeave={finishHover}\r\n        onClick={selectMesh}\r\n        onPointerMissed={deselectMesh}\r\n        castShadow\r\n        receiveShadow\r\n        geometry={geometry}\r\n      >\r\n        <meshStandardMaterial\r\n          ref={matRef}\r\n          color={color}\r\n          side={THREE.DoubleSide}\r\n          metalness={metalness}\r\n          roughness={roughness}\r\n          emissive={hovering ? \"orange\" : \"white\"}\r\n          emissiveIntensity={hovering ? 5 : 0}\r\n          map={img}\r\n        />\r\n      </mesh>\r\n\r\n      {selected === geometry.uuid && <Html position={geometry.boundingBox.max}>\r\n        <div className=\"materialPopup\">\r\n          {!img && <>\r\n            <p>Color</p>\r\n            <input type=\"color\" ref={colorInpRef} onChange={setMeshColor} style={{backgroundColor:borderColor}} />\r\n          </>}\r\n          {img && <>\r\n            <p>Image</p>\r\n            <input type=\"file\" ref={imgInpRef} onChange={updateImageUrl} />\r\n          </>}\r\n          <p>Metal</p>\r\n          <input type=\"checkbox\" ref={metalnessInpRef} onChange={setMeshMetalness} />\r\n          <p>Roughness</p>\r\n          <input type=\"range\" ref={roughnessInpRef} min=\"0\" max=\"1\" step={0.01} onChange={setMeshRoughness} />\r\n        </div>\r\n      </Html>}\r\n\r\n    </group>\r\n  )\r\n}","import React, { useState, useRef, useEffect, Suspense } from 'react'\r\nimport * as THREE from \"three\";\r\nimport { TransformControls, Sphere } from '@react-three/drei'\r\n\r\nimport MockupMesh from './Mesh';\r\n\r\n\r\nexport const hexToRgb = (hex) => {\r\n  // https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n  hex = hex.replace(shorthandRegex, function(m, r, g, b) {\r\n    return r + r + g + g + b + b;\r\n  });\r\n\r\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return `rgb(${parseInt(result[1], 16)}, ${parseInt(result[2], 16)}, ${parseInt(result[3], 16)})`\r\n}\r\n\r\nfunction componentToHex(c) {\r\n  var hex = c.toString(16);\r\n  return hex.length == 1 ? \"0\" + hex : hex;\r\n}\r\n\r\nexport function rgbToHex(r, g, b) {\r\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\n\r\nexport default function BaseModel(props) {\r\n  const { tool, orbit, activeModel, setActiveModel } = props\r\n\r\n  const groupRef = useRef()\r\n\r\n  const transform = useRef()\r\n\r\n  const [transformMode, setTransformMode] = useState(\"translate\")\r\n\r\n  const [selectedMeshUid, setSelectedMeshUid] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (![\"translate\", \"rotate\", \"scale\"].includes(tool)) {\r\n      setActiveModel(null)\r\n    } else {\r\n      setTransformMode(tool)\r\n    }\r\n  }, [tool])\r\n\r\n  const selectModel = (evt) => {\r\n    if ([\"translate\", \"rotate\", \"scale\"].includes(tool)) {\r\n      setActiveModel(groupRef.current)\r\n    }\r\n    evt.stopPropagation()\r\n  }\r\n  \r\n  const setCursor = () => {\r\n    if ([\"translate\", \"rotate\", \"scale\"].includes(tool)) {\r\n      document.body.classList.add(\"pointing\")\r\n    }\r\n  }\r\n  const resetCursor = () => {\r\n    if ([\"translate\", \"rotate\", \"scale\"].includes(tool)) {\r\n      document.body.classList.remove(\"pointing\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (transform.current && orbit.current) {\r\n      const controls = transform.current\r\n      controls.setMode(transformMode)\r\n      const callback = event => (orbit.current.enabled = !event.value)\r\n      controls.addEventListener(\"dragging-changed\", callback)\r\n      return () => controls.removeEventListener(\"dragging-changed\", callback)\r\n    }\r\n  })\r\n\r\n  const transformEnabled = () => {\r\n    return [\"translate\", \"rotate\", \"scale\"].includes(tool) && activeModel === groupRef.current\r\n  }\r\n\r\n  let meshes = React.Children.toArray(props.children)\r\n  return (\r\n    <TransformControls ref={transform}\r\n      enabled={transformEnabled}\r\n      size={transformEnabled() ? 1 : 0} >\r\n      {<group {...props} dispose={null} ref={groupRef}\r\n        onPointerOver={setCursor}\r\n        onPointerLeave={resetCursor}\r\n        onClick={selectModel}\r\n      >\r\n        {meshes.map(meshData => {\r\n          if (meshData.props.geometry === undefined) return\r\n\r\n          const mat = meshData.props.material\r\n          return <MockupMesh\r\n                    key={meshData.props.geometry.uuid}\r\n                    geometry={meshData.props.geometry}\r\n                    color={mat.map ? new THREE.Color(\"rgb(127,127,127)\") : mat.color}\r\n                    metalness={mat.metalness}\r\n                    roughness={mat.roughness}\r\n                    img={mat.map}\r\n                    selectable={mat.name.includes(\".editable\") && tool === \"materials\"}\r\n                    selected={selectedMeshUid}\r\n                    setSelected={setSelectedMeshUid}\r\n                  />\r\n        })}\r\n      </group>}\r\n    </TransformControls>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/phone.2756fbde.gltf\";","import React from 'react'\r\nimport { useGLTF } from '@react-three/drei'\r\nimport BaseModel from '../BaseModel'\r\n\r\nimport PhoneModel from './phone.gltf'\r\n\r\nexport default function Phone(props) {\r\n\r\n  const { nodes, materials } = useGLTF(PhoneModel)\r\n\r\n  return (\r\n    <BaseModel {...props} >\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Buttons.geometry}\r\n        material={materials['Buttons.editable']}\r\n      />\r\n      <mesh castShadow receiveShadow geometry={nodes.Flash.geometry} material={materials.Flash} />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Bezel.geometry}\r\n        material={materials['Bezel.editable']}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Body.geometry}\r\n        material={materials['Body.editable']}\r\n      />\r\n      <mesh castShadow receiveShadow geometry={nodes.Lenses.geometry} material={materials.Lenses} />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Screen.geometry}\r\n        material={materials['Screen.editable']}\r\n      />\r\n    </BaseModel>\r\n  )\r\n}\r\n\r\nuseGLTF.preload(PhoneModel)","export default __webpack_public_path__ + \"static/media/suzanne.8371d4f0.gltf\";","import React from 'react'\r\nimport { useGLTF } from '@react-three/drei'\r\nimport BaseModel from '../BaseModel'\r\n\r\nimport SuzanneModel from './suzanne.gltf'\r\n\r\nexport default function Suzanne(props) {\r\n\r\n  const { nodes, materials } = useGLTF(SuzanneModel)\r\n\r\n  return (\r\n    <BaseModel {...props} >\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Suzanne.geometry}\r\n        material={materials['Material.001.editable']}\r\n      />\r\n    </BaseModel>\r\n  )\r\n}\r\n\r\nuseGLTF.preload(SuzanneModel)","import React, { useState, useEffect, useRef, Suspense } from 'react'\r\n\r\nimport { useFrame } from '@react-three/fiber'\r\nimport { OrbitControls, TransformControls, ContactShadows, Sphere } from '@react-three/drei'\r\nimport { EffectComposer, SSAO, SMAA } from '@react-three/postprocessing'\r\nimport { EdgeDetectionMode } from 'postprocessing'\r\nimport * as THREE from \"three\";\r\n\r\nimport Environment from './Environment'\r\nimport Lighting from './Lighting'\r\n\r\n\r\n// IMPORT YOUR MODEL HERE\r\nimport Phone from '../models/mockups/Phone'\r\nimport Suzanne from '../models/mockups/Suzanne'\r\n\r\n\r\nfunction MockupScene({ groundShadows, objectShadows, orbitEnabled, doDownload, setDoDownload, width, height, tool, mockups }) {\r\n\r\n  const orbit = useRef()\r\n\r\n  const [activeModel, setActiveModel] = useState(null)\r\n\r\n  const downloadImage = (state) => {\r\n    if (!doDownload) return\r\n    \r\n    const img = state.gl.domElement.toDataURL()\r\n    const link = document.createElement(\"a\");\r\n    link.href = img;\r\n    link.download = `mockup_${width}x${height}.png`;\r\n    link.click();\r\n\r\n    setDoDownload(false)\r\n  }\r\n\r\n  useFrame((state) => downloadImage(state))\r\n\r\n  const preset = \"bridge2\"\r\n\r\n  return (\r\n    <Suspense fallback={null}>\r\n      <scene>\r\n        <OrbitControls makeDefault enabled={orbitEnabled} ref={orbit} />\r\n\r\n        <Environment preset={preset} />\r\n        <Lighting shadows={objectShadows} />\r\n\r\n        <group position={[0, 0, 0]} dispose={null} >\r\n          {mockups.map(mockup => {\r\n            const mockupProps = { key: mockup.key, tool: tool, orbit: orbit, activeModel: activeModel, setActiveModel: setActiveModel }\r\n\r\n            // ADD A CASE HERE WHEN ADDING A NEW MODEL. MAKE SURE TO PASS THE mockupProps AND USE THE SAME KEY AS IN modelNames\r\n            switch (mockup.type) {\r\n              case \"phone\":\r\n                return <Phone {...mockupProps} />\r\n              case \"suzanne\":\r\n                return <Suzanne {...mockupProps} />\r\n            }\r\n\r\n          })}\r\n        </group>\r\n\r\n        <ContactShadows rotation={[Math.PI / 2, 0, 0]} position={[0, -7, 0]} opacity={0.75} width={40} height={40} blur={1} far={9} />\r\n\r\n        {groundShadows && <mesh rotation={[-Math.PI / 2, 0, 0]} position={[0, 0, 0]} receiveShadow castShadow>\r\n          <planeBufferGeometry attach=\"geometry\" args={[15, 15]} />\r\n          <shadowMaterial attach=\"material\" opacity={.4} />\r\n        </mesh>}\r\n\r\n        {[\"translate\", \"rotate\", \"scale\"].includes(tool) && <gridHelper position={[0, 0, 0]} args={[15, 20, \"white\", \"#585858\"]}/>}\r\n      </scene>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\n\r\nexport default MockupScene;","import React, { useState, useRef, useEffect } from 'react'\r\n\r\nimport { Canvas } from '@react-three/fiber'\r\nimport { PerspectiveCamera, Sphere } from '@react-three/drei'\r\nimport * as THREE from \"three\";\r\n\r\nimport uuid from 'react-uuid'\r\nimport { FaCamera, FaTint, FaCube, FaCubes, FaLock, FaPlus, FaArrowsAlt, FaSyncAlt, FaCompress, FaFillDrip, FaHandPaper } from 'react-icons/fa';\r\n\r\nimport './Scene.css';\r\nimport MockupScene from './MockupScene';\r\n\r\n\r\n// ADD YOUR MODEL KEY AND DISPLAY NAME TO THIS LIST\r\nconst modelNames = {\r\n  phone: \"Smartphone\",\r\n  suzanne: \"Suzanne\"\r\n}\r\n\r\n\r\nfunction Scene() {\r\n\r\n  // VIEW SETTINGS\r\n  const [groundShadows, setGroundShadows] = useState(false)\r\n  const [objectShadows, setObjectShadows] = useState(true)\r\n\r\n  const [fov, setFov] = useState(0)\r\n\r\n  const [orbitEnabled, setOrbitEnabled] = useState(true)\r\n\r\n  const [hasAlpha, setHasAlpha] = useState(false)\r\n  const [color, setColor] = useState(\"\")\r\n  \r\n  const [mockups, setMockups] = useState([])\r\n\r\n  const [showAddModels, setShowAddModels] = useState(false)\r\n  \r\n  // REFS\r\n  const colorInpRef = useRef()\r\n  const widthInpRef = useRef()\r\n  const heightInpRef = useRef()\r\n\r\n  const canvasRef = useRef()\r\n  const cameraRef = useRef()\r\n\r\n  // TOOLS\r\n  const [doDownload, setDoDownload] = useState(false)\r\n  const tools = [\"grab\", \"materials\", \"translate\", \"rotate\", \"scale\"]\r\n  const [toolIndex, setToolIndex] = useState(1)\r\n\r\n\r\n  const shorcutPressed = (evt) => {\r\n    const codes = {\r\n      \"Space\": 0,\r\n      \"Digit1\": 0,\r\n      \"KeyM\": 1,\r\n      \"KeyF\": 1,\r\n      \"Digit2\": 1,\r\n      \"KeyQ\": 2,\r\n      \"KeyG\": 2,\r\n      \"Digit3\": 2,\r\n      \"KeyW\": 3,\r\n      \"KeyR\": 3,\r\n      \"Digit4\": 3,\r\n      \"KeyE\": 4,\r\n      \"KeyS\": 4,\r\n      \"Digit5\": 4,\r\n    }\r\n    if (evt.code in codes) {\r\n      setToolIndex(codes[evt.code])\r\n    }\r\n  }\r\n  \r\n\r\n  const setBackgroundColor = () => {\r\n    document.getElementsByClassName(\"App\")[0].style.backgroundColor = colorInpRef.current.value\r\n    setColor(colorInpRef.current.value)\r\n    setHasAlpha(false)\r\n  }\r\n\r\n\r\n  const setCameraSize = () => {\r\n    const width = Math.max(1, widthInpRef.current.value)\r\n    const height = Math.max(1, heightInpRef.current.value)\r\n\r\n    const elem = document.getElementsByClassName(\"canvasContainer\")[0]\r\n    elem.style.width = `${width}px`\r\n    elem.style.height = `${height}px`\r\n    \r\n    const xScale = window.innerWidth / width\r\n    const yScale = window.innerHeight / height\r\n    let scale = Math.min(xScale, yScale)\r\n    scale = scale<1 ? scale-0.02 : 1\r\n\r\n    canvasRef.current.style.transform = `scale(${scale})`\r\n  }\r\n\r\n\r\n  const addMockup = (modelType) => {\r\n    setMockups(current => [...current, {key: uuid(), type: modelType}])\r\n    setShowAddModels(false)\r\n  }\r\n\r\n\r\n  useEffect(() => { // set alpha\r\n    if (hasAlpha) {\r\n      document.getElementsByClassName(\"App\")[0].classList.add(\"alpha\")\r\n      canvasRef.current.classList.add(\"alpha\")\r\n    } else {\r\n      document.getElementsByClassName(\"App\")[0].classList.remove(\"alpha\")\r\n      canvasRef.current.classList.remove(\"alpha\")\r\n    }\r\n  }, [hasAlpha])\r\n\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", setCameraSize)\r\n    window.addEventListener(\"keypress\", shorcutPressed)\r\n    \r\n    // set default camera size\r\n    widthInpRef.current.value = window.innerWidth-20\r\n    heightInpRef.current.value = window.innerHeight-20\r\n    \r\n    // set default fov\r\n    setFov(20)\r\n    \r\n    // set default background color\r\n    colorInpRef.current.value = \"#8A4CE6\"\r\n    setBackgroundColor()\r\n    \r\n    // set alpha default\r\n    setHasAlpha(true)\r\n    \r\n    // scale camera to initial size\r\n    setCameraSize()\r\n\r\n    // add default objects\r\n    addMockup(\"phone\")\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", setCameraSize)\r\n      window.removeEventListener(\"keypress\", shorcutPressed)\r\n    }\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"sceneContainer\">\r\n\r\n      <div className=\"toolBtnsContainer\">\r\n        <button className={`iconToggle tool ${toolIndex===0&&\"active\"}`} onClick={() => setToolIndex(0)} bottom-tooltip=\"Drag (Space)\"><FaHandPaper color=\"white\" size={17} /></button>\r\n        <div className=\"dividerSmall\"></div>\r\n        <button className={`iconToggle tool ${toolIndex===1&&\"active\"}`} onClick={() => setToolIndex(1)} bottom-tooltip=\"Materials (M,F)\"><FaFillDrip color=\"white\" size={17} /></button>\r\n        <div className=\"dividerSmall\"></div>\r\n        <button className={`iconToggle tool ${toolIndex===2&&\"active\"}`} onClick={() => setToolIndex(2)} bottom-tooltip=\"Move (Q,G)\"><FaArrowsAlt color=\"white\" size={17} /></button>\r\n        <button className={`iconToggle tool ${toolIndex===3&&\"active\"}`} onClick={() => setToolIndex(3)} bottom-tooltip=\"Rotate (W,R)\"><FaSyncAlt color=\"white\" size={17} /></button>\r\n        <button className={`iconToggle tool ${toolIndex===4&&\"active\"}`} onClick={() => setToolIndex(4)} bottom-tooltip=\"Scale (E,S)\"><FaCompress color=\"white\" size={17} /></button>\r\n      </div>\r\n\r\n      <div className=\"viewBtnsContainer\">\r\n        <button className={`iconToggle ${objectShadows&&\"active\"}`} onClick={() => setObjectShadows(!objectShadows)} bottom-tooltip=\"Shadows\"><FaCubes color=\"white\" size={17} /></button>\r\n        <button className={`iconToggle ${groundShadows&&objectShadows&&\"active\"}`} onClick={() => setGroundShadows(!groundShadows)} bottom-tooltip=\"Ground Shadows\"><FaCube color=\"white\" size={17} /></button>\r\n        <div className=\"divider\"></div>\r\n        <button className={`iconToggle ${!hasAlpha&&\"active\"}`} onClick={() => setHasAlpha(!hasAlpha)} bottom-tooltip=\"Background\"><FaTint color=\"white\" size={17} /></button>\r\n        <input type=\"color\" onChange={setBackgroundColor} ref={colorInpRef} style={{backgroundColor: colorInpRef.current?.value}}></input> \r\n        <div className=\"divider\"></div>\r\n        <input type=\"number\" onChange={setCameraSize} ref={widthInpRef} />\r\n        <input type=\"number\" onChange={setCameraSize} ref={heightInpRef} />\r\n        <div className=\"divider\"></div>\r\n        <input type=\"range\" value={fov} min=\"10\" max=\"50\" step={2} onChange={(evt) => setFov(evt.target.value)} className=\"fovInp\" />\r\n        <button className={`iconToggle ${!orbitEnabled&&\"active\"}`} onClick={() => setOrbitEnabled(!orbitEnabled)} bottom-tooltip=\"Lock Drag\"><FaLock color=\"white\" size={17} /></button>\r\n      </div>\r\n\r\n      <div className=\"addPopup\" style={{transform: showAddModels ? 'scale(100%)' : 'scale(0%)' }}>\r\n        {Object.keys(modelNames).map(key => {\r\n          return <button key={key} className=\"addModelBtn\" onClick={() => addMockup(key)}>\r\n                  <FaPlus size={10} color=\"white\" style={{marginRight:\"8px\"}}/>\r\n                  {modelNames[key]}\r\n                </button>\r\n        })}\r\n      </div>\r\n      <button className=\"addBtn\" onClick={() => setShowAddModels(current => !current)}><FaPlus size={16} color=\"white\"/></button>\r\n\r\n      <button className=\"downloadBtn\" onClick={() => setDoDownload(true)}><FaCamera size={16} color=\"white\"/></button>\r\n\r\n      <div className=\"canvasContainer\">\r\n        <Canvas shadows ref={canvasRef} gl={{ preserveDrawingBuffer: true, antialias: true }} >\r\n\r\n          <PerspectiveCamera makeDefault ref={cameraRef} fov={fov} position={[-1, 2, 7]} />\r\n\r\n          <group position={[0, -0.5, 0]}>\r\n            <MockupScene\r\n              groundShadows={groundShadows}\r\n              objectShadows={objectShadows}\r\n              orbitEnabled={orbitEnabled}\r\n              doDownload={doDownload}\r\n              setDoDownload={setDoDownload}\r\n              width={widthInpRef.current ? widthInpRef.current.value : 0}\r\n              height={heightInpRef.current ? heightInpRef.current.value : 0}\r\n              tool={tools[toolIndex]}\r\n              mockups={mockups}\r\n            />\r\n          </group>\r\n\r\n          {!hasAlpha && <color attach=\"background\" args={[color]} />}\r\n\r\n        </Canvas>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Scene;","import React, { useState } from 'react';\nimport './App.css';\n\nimport Scene from './components/scene/Scene';\n\nfunction App () {\n\n  return (\n    <div className=\"App\">\n      \n      <Scene />\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}