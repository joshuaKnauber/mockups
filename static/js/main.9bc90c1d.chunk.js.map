{"version":3,"sources":["components/models/phone.gltf","components/models/Home Screen.png","components/models/Shoebox.js","components/scene/MockupScene.js","components/scene/Scene.js","App.js","reportWebVitals.js","index.js"],"names":["Shoebox","props","group","useRef","useGLTF","Model","nodes","materials","tex","useTexture","Tex","ref","dispose","castShadow","receiveShadow","geometry","Plane001","material","Plane011","Plane011_1","Plane011_2","Pantalla","roughness","metalness","map","Plane011_3","Plane011_4","Plane002","Plane014","Plane014_1","Circle001_1","Circle001_2","Circle001","Circle003","Circle002","Plane004","Circle008","Circle008_1","Cobre","Plane005","Plane006","Plane007","preload","MockupScene","groundShadows","objectShadows","doDownload","setDoDownload","width","height","useFrame","state","img","gl","domElement","toDataURL","link","document","createElement","href","download","click","downloadImage","Stage","contactShadow","shadows","adjustCamera","intensity","environment","preset","Scene","useState","setGroundShadows","setObjectShadows","fov","setFov","orbitEnabled","setOrbitEnabled","hasAlpha","setHasAlpha","color","setColor","cameraPosOverwrite","setCameraPosOverwrite","colorInpRef","widthInpRef","heightInpRef","canvasRef","cameraRef","setBackgroundColor","getElementsByClassName","style","backgroundColor","current","value","setCameraSize","Math","max","elem","xScale","window","innerWidth","yScale","innerHeight","scale","min","transform","useEffect","classList","add","remove","addEventListener","removeEventListener","className","onClick","bottom-tooltip","size","opacity","type","onChange","evt","target","fallback","colorManagement","shadowMap","preserveDrawingBuffer","OrbitControls","makeDefault","enabled","PerspectiveCamera","near","far","position","attach","args","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4SAAe,MAA0B,mCCA1B,MAA0B,wC,OCU1B,SAASA,EAAQC,GAC9B,IAAMC,EAAQC,mBADuB,EAERC,YAAQC,GAA7BC,EAF6B,EAE7BA,MAAOC,EAFsB,EAEtBA,UACTC,EAAMC,YAAWC,GACvB,OACE,gDAAOC,IAAKT,GAAWD,GAAvB,IAA8BW,QAAS,KAAvC,UACE,sBACEC,YAAU,EACVC,eAAa,EACbC,SAAUT,EAAMU,SAASD,SACzBE,SAAUX,EAAMU,SAASC,WAE3B,sBACEJ,YAAU,EACVC,eAAa,EACbC,SAAUT,EAAMY,SAASH,SACzBE,SAAUX,EAAMY,SAASD,WAE3B,sBACEJ,YAAU,EACVC,eAAa,EACbC,SAAUT,EAAMa,WAAWJ,SAC3BE,SAAUX,EAAMa,WAAWF,WAE7B,sBACEJ,YAAU,EACVC,eAAa,EACbC,SAAUT,EAAMc,WAAWL,SAC3BE,SAAUV,EAAUc,SAJtB,SAME,sCAAsBC,UAAW,KAAOC,UAAW,EAAGC,IAAKhB,MAE7D,sBACEK,YAAU,EACVC,eAAa,EACbC,SAAUT,EAAMmB,WAAWV,SAC3BE,SAAUX,EAAMmB,WAAWR,WAE7B,sBACEJ,YAAU,EACVC,eAAa,EACbC,SAAUT,EAAMoB,WAAWX,SAC3BE,SAAUV,EAAU,uBAEtB,sBACEM,YAAU,EACVC,eAAa,EACbC,SAAUT,EAAMqB,SAASZ,SACzBE,SAAUX,EAAMqB,SAASV,WAE3B,sBACEJ,YAAU,EACVC,eAAa,EACbC,SAAUT,EAAMsB,SAASb,SACzBE,SAAUX,EAAMsB,SAASX,WAE3B,sBACEJ,YAAU,EACVC,eAAa,EACbC,SAAUT,EAAMuB,WAAWd,SAC3BE,SAAUX,EAAMuB,WAAWZ,WAE7B,sBACEJ,YAAU,EACVC,eAAa,EACbC,SAAUT,EAAMwB,YAAYf,SAC5BE,SAAUX,EAAMwB,YAAYb,WAE9B,sBACEJ,YAAU,EACVC,eAAa,EACbC,SAAUT,EAAMyB,YAAYhB,SAC5BE,SAAUX,EAAMyB,YAAYd,WAE9B,sBACEJ,YAAU,EACVC,eAAa,EACbC,SAAUT,EAAM0B,UAAUjB,SAC1BE,SAAUX,EAAM0B,UAAUf,WAE5B,sBACEJ,YAAU,EACVC,eAAa,EACbC,SAAUT,EAAM2B,UAAUlB,SAC1BE,SAAUV,EAAU,aAEtB,sBACEM,YAAU,EACVC,eAAa,EACbC,SAAUT,EAAM4B,UAAUnB,SAC1BE,SAAUX,EAAM4B,UAAUjB,WAE5B,sBACEJ,YAAU,EACVC,eAAa,EACbC,SAAUT,EAAM6B,SAASpB,SACzBE,SAAUX,EAAM6B,SAASlB,WAE3B,sBACEJ,YAAU,EACVC,eAAa,EACbC,SAAUT,EAAM8B,UAAUrB,SAC1BE,SAAUV,EAAU,oBAEtB,sBACEM,YAAU,EACVC,eAAa,EACbC,SAAUT,EAAM+B,YAAYtB,SAC5BE,SAAUV,EAAU+B,QAEtB,sBACEzB,YAAU,EACVC,eAAa,EACbC,SAAUT,EAAMiC,SAASxB,SACzBE,SAAUX,EAAMiC,SAAStB,WAE3B,sBACEJ,YAAU,EACVC,eAAa,EACbC,SAAUT,EAAMkC,SAASzB,SACzBE,SAAUX,EAAMkC,SAASvB,WAE3B,sBACEJ,YAAU,EACVC,eAAa,EACbC,SAAUT,EAAMmC,SAAS1B,SACzBE,SAAUX,EAAMmC,SAASxB,eAMjCb,IAAQsC,QAAQrC,GCjGDsC,MArCf,YAAkG,IAA3EC,EAA0E,EAA1EA,cAAeC,EAA2D,EAA3DA,cAAeC,EAA4C,EAA5CA,WAAYC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OAoBrF,OAlBgB9C,mBAgBhB+C,aAAS,SAACC,GAAD,OAda,SAACA,GACrB,GAAKL,EAAL,CAEA,IAAMM,EAAMD,EAAME,GAAGC,WAAWC,YAE1BC,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOP,EACZI,EAAKI,SAAL,iBAA0BZ,EAA1B,YAAmCC,EAAnC,QACAO,EAAKK,QAELd,GAAc,IAIIe,CAAcX,MAGhC,gCACI,cAACY,EAAA,EAAD,CAAOC,cAAepB,EAAeqB,QAASpB,EAAeqB,cAAY,EAACC,UAAW,EAAGC,YAAY,SAASC,OAAO,YAApH,SAOE,cAACrE,EAAD,SCyGKsE,MAnIf,WAAkB,IAAD,IAEqBC,oBAAS,GAF9B,mBAERzB,EAFQ,KAEIC,EAFJ,OAK2BwB,oBAAS,GALpC,mBAKR3B,EALQ,KAKO4B,EALP,OAM2BD,oBAAS,GANpC,mBAMR1B,EANQ,KAMO4B,EANP,OAQOF,mBAAS,GARhB,mBAQRG,EARQ,KAQHC,EARG,OAUyBJ,oBAAS,GAVlC,mBAURK,EAVQ,KAUMC,EAVN,OAYiBN,oBAAS,GAZ1B,mBAYRO,EAZQ,KAYEC,EAZF,OAaWR,mBAAS,IAbpB,mBAaRS,EAbQ,KAaDC,EAbC,OAeqCV,mBAAS,CAAC,EAAG,EAAG,IAfrD,mBAeRW,EAfQ,KAeYC,EAfZ,KAiBTC,EAAcjF,mBACdkF,EAAclF,mBACdmF,EAAenF,mBAEfoF,EAAYpF,mBACZqF,EAAYrF,mBAEZsF,EAAqB,WACzBhC,SAASiC,uBAAuB,OAAO,GAAGC,MAAMC,gBAAkBR,EAAYS,QAAQC,MACtFb,EAASG,EAAYS,QAAQC,OAC7Bf,GAAY,IAGRgB,EAAgB,WACpB,IAAM/C,EAAQgD,KAAKC,IAAI,EAAGZ,EAAYQ,QAAQC,OACxC7C,EAAS+C,KAAKC,IAAI,EAAGX,EAAaO,QAAQC,OAE1CI,EAAOzC,SAASiC,uBAAuB,mBAAmB,GAChEQ,EAAKP,MAAM3C,MAAX,UAAsBA,EAAtB,MACAkD,EAAKP,MAAM1C,OAAX,UAAuBA,EAAvB,MAEA,IAAMkD,EAASC,OAAOC,WAAarD,EAC7BsD,EAASF,OAAOG,YAActD,EAChCuD,EAAQR,KAAKS,IAAIN,EAAQG,GAC7BE,EAAQA,EAAM,EAAIA,EAAM,IAAO,EAE/BjB,EAAUM,QAAQF,MAAMe,UAAxB,gBAA6CF,EAA7C,MAyCF,OArCAG,qBAAU,WACJ7B,GACFrB,SAASiC,uBAAuB,OAAO,GAAGkB,UAAUC,IAAI,SACxDtB,EAAUM,QAAQe,UAAUC,IAAI,WAEhCpD,SAASiC,uBAAuB,OAAO,GAAGkB,UAAUE,OAAO,SAC3DvB,EAAUM,QAAQe,UAAUE,OAAO,YAEpC,CAAChC,IAGJ6B,qBAAU,WAoBR,OAnBAP,OAAOW,iBAAiB,SAAUhB,GAGlCV,EAAYQ,QAAQC,MAAQM,OAAOC,WAAW,GAC9Cf,EAAaO,QAAQC,MAAQM,OAAOG,YAAY,GAChDR,IAGApB,EAAO,IAGPS,EAAYS,QAAQC,MAAQ,UAC5BL,IAGAV,GAAY,GAEZI,EAAsB,CAAC,EAAE,GAAG,IAErB,WACLiB,OAAOY,oBAAoB,SAAUjB,MAEtC,IAID,sBAAKkB,UAAU,iBAAf,UAEE,sBAAKA,UAAU,oBAAf,UAEE,wBAAQA,UAAU,aAAaC,QAAS,kBAAM1C,GAAkB5B,IAAgBuE,iBAAe,iBAA/F,SAAgH,cAAC,IAAD,CAAQnC,MAAM,QAAQoC,KAAM,GAAIzB,MAAO,CAAC0B,QAAQzE,EAAc,EAAE,QAChL,wBAAQqE,UAAU,aAAaC,QAAS,kBAAMzC,GAAkB5B,IAAgBsE,iBAAe,iBAA/F,SAAgH,cAAC,IAAD,CAASnC,MAAM,QAAQoC,KAAM,GAAIzB,MAAO,CAAC0B,QAAQxE,EAAc,EAAE,QACjL,qBAAKoE,UAAU,YACf,wBAAQA,UAAU,aAAaC,QAAS,kBAAMnC,GAAaD,IAAWqC,iBAAe,aAArF,SAAkG,cAAC,IAAD,CAAQnC,MAAM,QAAQoC,KAAM,GAAIzB,MAAO,CAAC0B,QAASvC,EAAW,GAAF,OAC5J,uBAAOwC,KAAK,QAAQC,SAAU9B,EAAoB9E,IAAKyE,EAAaO,MAAO,CAACC,gBAAe,UAAER,EAAYS,eAAd,aAAE,EAAqBC,SAClH,qBAAKmB,UAAU,YACf,uBAAOK,KAAK,SAASC,SAAUxB,EAAepF,IAAK0E,IAEnD,uBAAOiC,KAAK,SAASC,SAAUxB,EAAepF,IAAK2E,IACnD,qBAAK2B,UAAU,YACf,uBAAOK,KAAK,SAASxB,MAAOpB,EAAK6C,SAAU,SAACC,GAAD,OAAS7C,EAAO6C,EAAIC,OAAO3B,QAAQmB,UAAU,WACxF,wBAAQA,UAAU,aAAaC,QAAS,kBAAMrC,GAAiBD,IAAeuC,iBAAe,QAA7F,SAAqG,cAAC,IAAD,CAAWnC,MAAM,QAAQoC,KAAM,GAAIzB,MAAO,CAAC0B,QAAQzC,EAAa,EAAE,WAGzK,wBAAQqC,UAAU,cAAcC,QAAS,kBAAMnE,GAAc,IAA7D,SAAoE,cAAC,IAAD,CAAUqE,KAAM,GAAIpC,MAAM,YAE9F,qBAAKiC,UAAU,kBAAf,SACE,cAAC,WAAD,CAAUS,SAAU,KAApB,SACE,eAAC,IAAD,CAAQC,iBAAe,EAACC,WAAS,EAAC3D,SAAO,EAACtD,IAAK4E,EAAWlC,GAAI,CAAEwE,uBAAuB,GAAvF,UACE,cAACC,EAAA,EAAD,CAAeC,aAAW,EAACC,QAASpD,IACpC,cAACqD,EAAA,EAAD,CAAmBF,aAAW,EAACpH,IAAK6E,EAAWd,IAAKA,EAAKwD,KAAM,KAAOC,IAAK,GAAIC,SAAUlD,IAEzF,cAAC,EAAD,CACEtC,cAAeA,EACfC,cAAeA,EACfC,WAAYA,EACZC,cAAeA,EACfC,MAAOqC,EAAYQ,QAAUR,EAAYQ,QAAQC,MAAQ,EACzD7C,OAAQqC,EAAaO,QAAUP,EAAaO,QAAQC,MAAQ,KAG5DhB,GAAY,uBAAOuD,OAAO,aAAaC,KAAM,CAACtD,gBCnH7CuD,MAXf,WAEE,OACE,qBAAKtB,UAAU,MAAf,SAEE,cAAC,EAAD,OCESuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1F,SAAS2F,eAAe,SAM1BZ,M","file":"static/js/main.9bc90c1d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/phone.d08364ea.gltf\";","export default __webpack_public_path__ + \"static/media/Home Screen.67e27939.png\";","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { useRef } from 'react'\r\nimport { useGLTF, useTexture } from '@react-three/drei'\r\n\r\nimport Model from './phone.gltf';\r\nimport Tex from './Home Screen.png';\r\n\r\nexport default function Shoebox(props) {\r\n  const group = useRef()\r\n  const { nodes, materials } = useGLTF(Model)\r\n  const tex = useTexture(Tex)\r\n  return (\r\n    <group ref={group} {...props} dispose={null}>\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Plane001.geometry}\r\n        material={nodes.Plane001.material}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Plane011.geometry}\r\n        material={nodes.Plane011.material}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Plane011_1.geometry}\r\n        material={nodes.Plane011_1.material}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Plane011_2.geometry}\r\n        material={materials.Pantalla}\r\n      >\r\n        <meshStandardMaterial roughness={0.025} metalness={0} map={tex} />\r\n      </mesh>\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Plane011_3.geometry}\r\n        material={nodes.Plane011_3.material}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Plane011_4.geometry}\r\n        material={materials['Bandas magneticas']}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Plane002.geometry}\r\n        material={nodes.Plane002.material}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Plane014.geometry}\r\n        material={nodes.Plane014.material}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Plane014_1.geometry}\r\n        material={nodes.Plane014_1.material}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Circle001_1.geometry}\r\n        material={nodes.Circle001_1.material}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Circle001_2.geometry}\r\n        material={nodes.Circle001_2.material}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Circle001.geometry}\r\n        material={nodes.Circle001.material}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Circle003.geometry}\r\n        material={materials['Luz Led']}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Circle002.geometry}\r\n        material={nodes.Circle002.material}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Plane004.geometry}\r\n        material={nodes.Plane004.material}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Circle008.geometry}\r\n        material={materials['Metal Ceramico']}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Circle008_1.geometry}\r\n        material={materials.Cobre}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Plane005.geometry}\r\n        material={nodes.Plane005.material}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Plane006.geometry}\r\n        material={nodes.Plane006.material}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Plane007.geometry}\r\n        material={nodes.Plane007.material}\r\n      />\r\n    </group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload(Model)\r\n","import React, { Suspense, useRef, useEffect, useState } from 'react'\r\n\r\nimport { useFrame, extend, useThree } from '@react-three/fiber'\r\nimport { Stage } from '@react-three/drei'\r\n\r\nimport Shoebox from '../models/Shoebox'\r\n\r\n\r\nfunction MockupScene({ groundShadows, objectShadows, doDownload, setDoDownload, width, height }) {\r\n\r\n  const meshRef = useRef()\r\n\r\n  const downloadImage = (state) => {\r\n    if (!doDownload) return\r\n    \r\n    const img = state.gl.domElement.toDataURL()\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.href = img;\r\n    link.download = `mockup_${width}x${height}.png`;\r\n    link.click();\r\n\r\n    setDoDownload(false)\r\n  }\r\n\r\n\r\n  useFrame((state) => downloadImage(state))\r\n\r\n  return (\r\n    <scene>\r\n        <Stage contactShadow={groundShadows} shadows={objectShadows} adjustCamera intensity={1} environment=\"sunset\" preset=\"rembrandt\" >\r\n\r\n          {/* <mesh receiveShadow castShadow position={[0, 0, 0]} ref={meshRef}>\r\n            <boxGeometry args={[1, 1, 1]} />\r\n            <meshStandardMaterial color={'orange'} roughness={1} metalness={0} />\r\n          </mesh> */}\r\n\r\n          <Shoebox/>\r\n\r\n        </Stage>\r\n    </scene>\r\n  );\r\n}\r\n\r\n\r\nexport default MockupScene;","import React, { useState, useRef, useEffect, Suspense } from 'react'\r\n\r\nimport { Canvas } from '@react-three/fiber'\r\nimport { OrbitControls, PerspectiveCamera } from '@react-three/drei'\r\n\r\nimport { FaCamera, FaTint, FaCube, FaCubes, FaCompass } from 'react-icons/fa';\r\n\r\nimport './Scene.css';\r\nimport MockupScene from './MockupScene';\r\n\r\n\r\nfunction Scene() {\r\n\r\n  const [doDownload, setDoDownload] = useState(false)\r\n\r\n  // VIEW SETTINGS\r\n  const [groundShadows, setGroundShadows] = useState(true)\r\n  const [objectShadows, setObjectShadows] = useState(true)\r\n\r\n  const [fov, setFov] = useState(0)\r\n\r\n  const [orbitEnabled, setOrbitEnabled] = useState(true)\r\n\r\n  const [hasAlpha, setHasAlpha] = useState(false)\r\n  const [color, setColor] = useState(\"\")\r\n\r\n  const [cameraPosOverwrite, setCameraPosOverwrite] = useState([0, 0, 0])\r\n  \r\n  const colorInpRef = useRef()\r\n  const widthInpRef = useRef()\r\n  const heightInpRef = useRef()\r\n\r\n  const canvasRef = useRef()\r\n  const cameraRef = useRef()\r\n  \r\n  const setBackgroundColor = () => {\r\n    document.getElementsByClassName(\"App\")[0].style.backgroundColor = colorInpRef.current.value\r\n    setColor(colorInpRef.current.value)\r\n    setHasAlpha(false)\r\n  }\r\n\r\n  const setCameraSize = () => {\r\n    const width = Math.max(1, widthInpRef.current.value)\r\n    const height = Math.max(1, heightInpRef.current.value)\r\n\r\n    const elem = document.getElementsByClassName(\"canvasContainer\")[0]\r\n    elem.style.width = `${width}px`\r\n    elem.style.height = `${height}px`\r\n    \r\n    const xScale = window.innerWidth / width\r\n    const yScale = window.innerHeight / height\r\n    let scale = Math.min(xScale, yScale)\r\n    scale = scale<1 ? scale-0.02 : 1\r\n\r\n    canvasRef.current.style.transform = `scale(${scale})`\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (hasAlpha) {\r\n      document.getElementsByClassName(\"App\")[0].classList.add(\"alpha\")\r\n      canvasRef.current.classList.add(\"alpha\")\r\n    } else {\r\n      document.getElementsByClassName(\"App\")[0].classList.remove(\"alpha\")\r\n      canvasRef.current.classList.remove(\"alpha\")\r\n    }\r\n  }, [hasAlpha])\r\n\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", setCameraSize)\r\n\r\n    // set default camera size\r\n    widthInpRef.current.value = window.innerWidth-20\r\n    heightInpRef.current.value = window.innerHeight-20\r\n    setCameraSize()\r\n\r\n    // set default fov\r\n    setFov(20)\r\n\r\n    // set default background color\r\n    colorInpRef.current.value = \"#000000\"\r\n    setBackgroundColor()\r\n\r\n    // set alpha default\r\n    setHasAlpha(false)\r\n\r\n    setCameraPosOverwrite([0,10,0])\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", setCameraSize)\r\n    }\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"sceneContainer\">\r\n\r\n      <div className=\"viewBtnsContainer\">\r\n\r\n        <button className=\"iconToggle\" onClick={() => setGroundShadows(!groundShadows)} bottom-tooltip=\"Ground Shadows\"><FaCube color=\"white\" size={17} style={{opacity:groundShadows?1:0.5}} /></button>\r\n        <button className=\"iconToggle\" onClick={() => setObjectShadows(!objectShadows)} bottom-tooltip=\"Object Shadows\"><FaCubes color=\"white\" size={17} style={{opacity:objectShadows?1:0.5}} /></button>\r\n        <div className=\"divider\"></div>\r\n        <button className=\"iconToggle\" onClick={() => setHasAlpha(!hasAlpha)} bottom-tooltip=\"Background\"><FaTint color=\"white\" size={17} style={{opacity:!hasAlpha?1:0.5}} /></button>\r\n        <input type=\"color\" onChange={setBackgroundColor} ref={colorInpRef} style={{backgroundColor: colorInpRef.current?.value}}></input>\r\n        <div className=\"divider\"></div>\r\n        <input type=\"number\" onChange={setCameraSize} ref={widthInpRef} />\r\n        {/* <p className=\"resolutionX\">x</p> */}\r\n        <input type=\"number\" onChange={setCameraSize} ref={heightInpRef} />\r\n        <div className=\"divider\"></div>\r\n        <input type=\"number\" value={fov} onChange={(evt) => setFov(evt.target.value)} className=\"fovInp\" />\r\n        <button className=\"iconToggle\" onClick={() => setOrbitEnabled(!orbitEnabled)} bottom-tooltip=\"Orbit\"><FaCompass color=\"white\" size={17} style={{opacity:orbitEnabled?1:0.5}} /></button>\r\n      </div>\r\n\r\n      <button className=\"downloadBtn\" onClick={() => setDoDownload(true)}><FaCamera size={16} color=\"white\"/></button>\r\n\r\n      <div className=\"canvasContainer\">\r\n        <Suspense fallback={null}>\r\n          <Canvas colorManagement shadowMap shadows ref={canvasRef} gl={{ preserveDrawingBuffer: true }}>\r\n            <OrbitControls makeDefault enabled={orbitEnabled} />\r\n            <PerspectiveCamera makeDefault ref={cameraRef} fov={fov} near={0.001} far={50} position={cameraPosOverwrite} />\r\n\r\n            <MockupScene\r\n              groundShadows={groundShadows}\r\n              objectShadows={objectShadows}\r\n              doDownload={doDownload}\r\n              setDoDownload={setDoDownload}\r\n              width={widthInpRef.current ? widthInpRef.current.value : 0}\r\n              height={heightInpRef.current ? heightInpRef.current.value : 0}\r\n            />\r\n\r\n            {!hasAlpha && <color attach=\"background\" args={[color]} />}\r\n\r\n          </Canvas>\r\n        </Suspense>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Scene;","import React, { useState } from 'react';\nimport './App.css';\n\nimport Scene from './components/scene/Scene';\n\nfunction App () {\n\n  return (\n    <div className=\"App\">\n      \n      <Scene />\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}