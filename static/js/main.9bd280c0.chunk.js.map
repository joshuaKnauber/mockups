{"version":3,"sources":["components/scene/Environment.js","components/scene/Lighting.js","components/scene/colorUtils.js","components/models/Mesh.js","components/models/BaseModel.js","components/models/mockups/phone.gltf","components/models/mockups/Phone.js","components/models/mockups/suzanne.gltf","components/models/mockups/Suzanne.js","components/scene/MockupScene.js","components/scene/Slider.js","components/scene/Scene.js","App.js","reportWebVitals.js","index.js"],"names":["presets","pisa","folder","files","bridge2","milkyway","angus","Environment","preset","props","path","Lighting","shadows","light1","useRef","light2","light3","light4","ref","position","intensity","color","castShadow","componentToHex","c","hex","toString","length","MockupMesh","metalness","roughness","img","geometry","selectable","selected","setSelected","matRef","imgInpRef","colorInpRef","useState","borderColor","setBorderColor","metalnessInpRef","roughnessInpRef","imgUrl","setImgUrl","hovering","setHovering","updateImageUrl","evt","a","file","target","type","arrayBuffer","buffer","blob","Blob","urlCreator","window","URL","webkitURL","imageUrl","createObjectURL","useEffect","document","body","classList","add","remove","uuid","current","r","g","b","rgbToHex","Math","floor","value","checked","Boolean","TextureLoader","load","tex","flipY","encoding","THREE","map","needsUpdate","receiveShadow","onPointerEnter","stopPropagation","onPointerLeave","onClick","onPointerMissed","side","emissive","emissiveIntensity","Html","boundingBox","max","className","onChange","set","replace","m","result","exec","parseInt","hexToRgb","style","backgroundColor","min","step","BaseModel","tool","orbit","activeModel","setActiveModel","mockupUuid","groupRef","transform","transformMode","setTransformMode","selectedMeshUid","setSelectedMeshUid","includes","controls","setMode","callback","event","enabled","addEventListener","removeEventListener","transformEnabled","meshes","React","Children","toArray","children","TransformControls","size","dispose","onPointerOver","meshData","undefined","mat","material","name","Phone","useGLTF","PhoneModel","nodes","materials","Buttons","Flash","Bezel","Body","Lenses","Screen","preload","Suzanne","SuzanneModel","MockupScene","groundShadows","objectShadows","orbitEnabled","doDownload","setDoDownload","width","height","mockups","removeMockup","isCamSet","setIsCamSet","useFrame","state","gl","domElement","toDataURL","link","createElement","href","download","click","downloadImage","camera","lookAt","shorcutPressed","code","fallback","OrbitControls","makeDefault","mockup","mockupProps","key","ContactShadows","rotation","PI","opacity","blur","far","attach","args","Slider","setValue","values","renderTrack","renderThumb","modelNames","phone","suzanne","Scene","setGroundShadows","setObjectShadows","fov","setFov","setOrbitEnabled","hasAlpha","setHasAlpha","setColor","setMockups","showAddModels","setShowAddModels","widthInpRef","heightInpRef","canvasRef","toolIndex","setToolIndex","codes","setBtnDarkness","isHEX","indexOf","isRGB","hasFullSpec","substr","match","brightnessByColor","setBackgroundColor","getElementsByClassName","setCameraSize","elem","xScale","innerWidth","yScale","innerHeight","scale","addMockup","modelType","tooltip","Object","keys","marginRight","preserveDrawingBuffer","antialias","PerspectiveCamera","filter","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9bd280c0.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Environment as EnvironmentImpl } from '@react-three/drei'\r\n\r\nconst examplesURL = 'https://cdn.jsdelivr.net/gh/mrdoob/three.js@r123/examples/textures/cube/'\r\n\r\n// See https://github.com/mrdoob/three.js/tree/master/examples/textures/cube\r\nconst presets = {\r\n  pisa: {\r\n    folder: 'pisa',\r\n    files: ['px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png'],\r\n  },\r\n  bridge2: {\r\n    folder: 'Bridge2',\r\n    files: ['posx.jpg', 'negx.jpg', 'posy.jpg', 'negy.jpg', 'posz.jpg', 'negz.jpg'],\r\n  },\r\n  milkyway: {\r\n    folder: 'MilkyWay',\r\n    files: ['dark-s_px.jpg', 'dark-s_nx.jpg', 'dark-s_py.jpg', 'dark-s_ny.jpg', 'dark-s_pz.jpg', 'dark-s_nz.jpg'],\r\n  },\r\n  angus: {\r\n    folder: 'angus',\r\n    files: ['cube_m00_c00.jpg', 'cube_m00_c01.jpg', 'cube_m00_c02.jpg', 'cube_m00_c03.jpg', 'cube_m00_c04.jpg', 'cube_m00_c05.jpg'],\r\n  },\r\n}\r\n\r\nexport default function Environment({ preset, ...props }) {\r\n  const { folder, files } = presets[preset]\r\n  const path = examplesURL + folder + '/'\r\n  return <EnvironmentImpl files={files} path={path} {...props} />\r\n}","import React, { useRef } from \"react\"\r\nimport { PointLightHelper, HemisphereLightHelper, DirectionalLightHelper } from \"three\"\r\nimport { useHelper, softShadows } from \"@react-three/drei\"\r\n\r\n// softShadows()\r\n\r\nexport default function Lighting({ shadows }) {\r\n\r\n  const light1 = useRef()\r\n  const light2 = useRef()\r\n  const light3 = useRef()\r\n  const light4 = useRef()\r\n  \r\n  // useHelper(light1, DirectionalLightHelper, 1, \"orange\")\r\n  // useHelper(light2, DirectionalLightHelper, 1, \"blue\")\r\n  // useHelper(light3, DirectionalLightHelper, 1, \"white\")\r\n  // useHelper(light4, DirectionalLightHelper, 1, \"white\")\r\n\r\n  return (\r\n    <group>\r\n      {/* <ambientLight intensity={1} /> */}\r\n      <directionalLight\r\n        ref={light1}\r\n        position={[2, 3, 3]}\r\n        intensity={3}\r\n        color={\"orange\"}\r\n        castShadow={shadows}\r\n      />\r\n      <directionalLight\r\n        ref={light2}\r\n        position={[-2, 3, 3]}\r\n        intensity={3}\r\n        color={\"lightblue\"}\r\n      />\r\n      <directionalLight\r\n        ref={light3}\r\n        position={[2, 1, -3]}\r\n        intensity={4}\r\n        color={\"white\"}\r\n      />\r\n      <directionalLight\r\n        ref={light4}\r\n        position={[-2, 1, -3]}\r\n        intensity={4}\r\n        color={\"white\"}\r\n      />\r\n    </group>\r\n  )\r\n}\r\n  ","export const brightnessByColor = (color) => {\r\n  var color = \"\" + color, isHEX = color.indexOf(\"#\") == 0, isRGB = color.indexOf(\"rgb\") == 0;\r\n  if (isHEX) {\r\n    const hasFullSpec = color.length == 7;\r\n    var m = color.substr(1).match(hasFullSpec ? /(\\S{2})/g : /(\\S{1})/g);\r\n    if (m) var r = parseInt(m[0] + (hasFullSpec ? '' : m[0]), 16), g = parseInt(m[1] + (hasFullSpec ? '' : m[1]), 16), b = parseInt(m[2] + (hasFullSpec ? '' : m[2]), 16);\r\n  }\r\n  if (isRGB) {\r\n    var m = color.match(/(\\d+){3}/g);\r\n    if (m) var r = m[0], g = m[1], b = m[2];\r\n  }\r\n  if (typeof r != \"undefined\") return ((r*299)+(g*587)+(b*114))/1000;\r\n}\r\n\r\n\r\nexport const hexToRgb = (hex) => {\r\n  // https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n  hex = hex.replace(shorthandRegex, function(m, r, g, b) {\r\n    return r + r + g + g + b + b;\r\n  });\r\n\r\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return `rgb(${parseInt(result[1], 16)}, ${parseInt(result[2], 16)}, ${parseInt(result[3], 16)})`\r\n}\r\n  \r\n\r\n\r\nconst componentToHex = (c) => {\r\n  var hex = c.toString(16);\r\n  return hex.length == 1 ? \"0\" + hex : hex;\r\n}\r\n\r\nexport const rgbToHex = (r, g, b) => {\r\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}","import React, { useRef, useState, useEffect } from 'react'\r\nimport { TextureLoader } from 'three'\r\nimport { Html } from '@react-three/drei'\r\nimport * as THREE from \"three\";\r\n\r\nimport { hexToRgb, rgbToHex } from '../scene/colorUtils';\r\n\r\nimport \"./Popup.scss\";\r\n\r\n\r\nexport default function MockupMesh ({ color=\"FFFFFF\", metalness=0, roughness=0.2, img=null, geometry=null, selectable=true, selected, setSelected }) {\r\n\r\n  const matRef = useRef()\r\n  const imgInpRef = useRef()\r\n  const colorInpRef = useRef()\r\n  const [borderColor, setBorderColor] = useState(\"white\")\r\n  const metalnessInpRef = useRef()\r\n  const roughnessInpRef = useRef()\r\n\r\n  const [imgUrl, setImgUrl] = useState(img)\r\n  const [hovering, setHovering] = useState(false)\r\n\r\n\r\n  const setMeshColor = () => {\r\n    colorInpRef.current && matRef.current.color.set( hexToRgb(colorInpRef.current.value) );\r\n    colorInpRef.current && setBorderColor(colorInpRef.current.value)\r\n  }\r\n  const setMeshMetalness = () => { matRef.current.metalness = metalnessInpRef.current.checked ? 1 : 0 }\r\n  const setMeshRoughness = () => { matRef.current.roughness = roughnessInpRef.current.value }\r\n\r\n\r\n  const updateImageUrl = async (evt) => {\r\n    const file = evt.target.files[0]\r\n    const { type } = file\r\n    const buffer = await file.arrayBuffer()\r\n    const blob = new Blob([buffer], { type })\r\n    const urlCreator = window.URL || window.webkitURL\r\n    const imageUrl = urlCreator.createObjectURL(blob)\r\n    setImgUrl(imageUrl)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (hovering) { document.body.classList.add(\"pointing\") }\r\n    else { document.body.classList.remove(\"pointing\") }\r\n  }, [hovering])\r\n\r\n\r\n  useEffect(() => {\r\n    if (selected === geometry.uuid) {\r\n      if (colorInpRef.current) {\r\n        const {r,g,b} = matRef.current.color\r\n        let color = rgbToHex(Math.floor(r*255),Math.floor(g*255),Math.floor(b*255))\r\n        colorInpRef.current.value = color\r\n        setBorderColor(color)\r\n      } \r\n      metalnessInpRef.current.checked = Boolean(matRef.current.metalness)\r\n      roughnessInpRef.current.value = matRef.current.roughness\r\n    }\r\n  }, [selected])\r\n\r\n\r\n  useEffect(() => {\r\n    if (selected === geometry.uuid && !selectable) {\r\n      setSelected(null)\r\n    }\r\n  }, [selectable])\r\n\r\n\r\n  useEffect(() => {\r\n    if (typeof(imgUrl) === typeof(\"\")) {\r\n      const textureLoader = new TextureLoader()\r\n      textureLoader.load(imgUrl, (tex) => {\r\n        tex.flipY = false\r\n        tex.encoding = THREE.sRGBEncoding\r\n        matRef.current.map = tex\r\n        matRef.current.needsUpdate = true\r\n      })\r\n    }\r\n  }, [imgUrl])\r\n\r\n  \r\n  const startHover = (evt) => {\r\n    if (selectable) {\r\n      setHovering(true)\r\n      evt.stopPropagation()\r\n    }\r\n  }\r\n\r\n\r\n  const finishHover = (evt) => {\r\n    if (hovering) {\r\n      setHovering(false)\r\n      evt.stopPropagation()\r\n    }\r\n  }\r\n\r\n\r\n  const selectMesh = (evt) => {\r\n    if (hovering && selectable) {\r\n      setSelected(geometry.uuid)\r\n      evt.stopPropagation()\r\n    }\r\n  }\r\n\r\n\r\n  const deselectMesh = (evt) => {\r\n    if (selected === geometry.uuid) {\r\n      setSelected(null)\r\n      evt.stopPropagation()\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <group castShadow receiveShadow>\r\n      <mesh\r\n        onPointerEnter={startHover}\r\n        onPointerLeave={finishHover}\r\n        onClick={selectMesh}\r\n        onPointerMissed={deselectMesh}\r\n        castShadow\r\n        receiveShadow\r\n        geometry={geometry}\r\n      >\r\n        <meshStandardMaterial\r\n          ref={matRef}\r\n          color={color}\r\n          side={THREE.DoubleSide}\r\n          metalness={metalness}\r\n          roughness={roughness}\r\n          emissive={hovering ? \"orange\" : \"white\"}\r\n          emissiveIntensity={hovering ? 5 : 0}\r\n          map={img}\r\n        />\r\n      </mesh>\r\n\r\n      {selected === geometry.uuid && <Html position={geometry.boundingBox.max}>\r\n        <div className=\"materialPopup\">\r\n          {!img && <>\r\n            <p>Color</p>\r\n            <input type=\"color\" ref={colorInpRef} onChange={setMeshColor} style={{backgroundColor:borderColor}} />\r\n          </>}\r\n          {img && <>\r\n            <p>Image</p>\r\n            <input type=\"file\" ref={imgInpRef} onChange={updateImageUrl} />\r\n          </>}\r\n          <p>Metal</p>\r\n          <input type=\"checkbox\" ref={metalnessInpRef} onChange={setMeshMetalness} />\r\n          <p>Roughness</p>\r\n          <input type=\"range\" ref={roughnessInpRef} min=\"0\" max=\"1\" step={0.01} onChange={setMeshRoughness} />\r\n        </div>\r\n      </Html>}\r\n\r\n    </group>\r\n  )\r\n}","import React, { useState, useRef, useEffect } from 'react'\r\nimport * as THREE from \"three\";\r\nimport { TransformControls } from '@react-three/drei'\r\n\r\nimport MockupMesh from './Mesh';\r\n\r\n\r\nexport default function BaseModel(props) {\r\n  const { tool, orbit, activeModel, setActiveModel, mockupUuid } = props\r\n\r\n  const groupRef = useRef()\r\n\r\n  const transform = useRef()\r\n\r\n  const [transformMode, setTransformMode] = useState(\"translate\")\r\n\r\n  const [selectedMeshUid, setSelectedMeshUid] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (![\"translate\", \"rotate\", \"scale\"].includes(tool)) {\r\n      setActiveModel(null)\r\n    } else {\r\n      setTransformMode(tool)\r\n    }\r\n  }, [tool])\r\n\r\n  const selectModel = (evt) => {\r\n    if ([\"translate\", \"rotate\", \"scale\"].includes(tool)) {\r\n      setActiveModel(groupRef.current)\r\n    }\r\n    evt.stopPropagation()\r\n  }\r\n  \r\n  const setCursor = () => {\r\n    if ([\"translate\", \"rotate\", \"scale\"].includes(tool)) {\r\n      document.body.classList.add(\"pointing\")\r\n    }\r\n  }\r\n  const resetCursor = () => {\r\n    if ([\"translate\", \"rotate\", \"scale\"].includes(tool)) {\r\n      document.body.classList.remove(\"pointing\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (transform.current && orbit.current) {\r\n      const controls = transform.current\r\n      controls.setMode(transformMode)\r\n      const callback = event => (orbit.current.enabled = !event.value)\r\n      controls.addEventListener(\"dragging-changed\", callback)\r\n      return () => controls.removeEventListener(\"dragging-changed\", callback)\r\n    }\r\n  })\r\n\r\n  const transformEnabled = () => {\r\n    return [\"translate\", \"rotate\", \"scale\"].includes(tool) && activeModel === groupRef.current\r\n  }\r\n\r\n  let meshes = React.Children.toArray(props.children)\r\n  return (\r\n    <TransformControls ref={transform}\r\n      enabled={transformEnabled}\r\n      size={transformEnabled() ? 1 : 0} >\r\n      {<group {...props} dispose={null} ref={groupRef} mockupUuid={mockupUuid}\r\n        onPointerOver={setCursor}\r\n        onPointerLeave={resetCursor}\r\n        onClick={selectModel}\r\n      >\r\n        {meshes.map(meshData => {\r\n          if (meshData.props.geometry === undefined) return\r\n\r\n          const mat = meshData.props.material\r\n          return <MockupMesh\r\n                    key={meshData.props.geometry.uuid}\r\n                    geometry={meshData.props.geometry}\r\n                    color={mat.map ? new THREE.Color(\"rgb(127,127,127)\") : mat.color}\r\n                    metalness={mat.metalness}\r\n                    roughness={mat.roughness}\r\n                    img={mat.map}\r\n                    selectable={mat.name.includes(\".editable\") && tool === \"materials\"}\r\n                    selected={selectedMeshUid}\r\n                    setSelected={setSelectedMeshUid}\r\n                  />\r\n        })}\r\n      </group>}\r\n    </TransformControls>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/phone.2756fbde.gltf\";","import React from 'react'\r\nimport { useGLTF } from '@react-three/drei'\r\nimport BaseModel from '../BaseModel'\r\n\r\nimport PhoneModel from './phone.gltf'\r\n\r\nexport default function Phone(props) {\r\n\r\n  const { nodes, materials } = useGLTF(PhoneModel)\r\n\r\n  return (\r\n    <BaseModel {...props} >\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Buttons.geometry}\r\n        material={materials['Buttons.editable']}\r\n      />\r\n      <mesh castShadow receiveShadow geometry={nodes.Flash.geometry} material={materials.Flash} />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Bezel.geometry}\r\n        material={materials['Bezel.editable']}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Body.geometry}\r\n        material={materials['Body.editable']}\r\n      />\r\n      <mesh castShadow receiveShadow geometry={nodes.Lenses.geometry} material={materials.Lenses} />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Screen.geometry}\r\n        material={materials['Screen.editable']}\r\n      />\r\n    </BaseModel>\r\n  )\r\n}\r\n\r\nuseGLTF.preload(PhoneModel)","export default __webpack_public_path__ + \"static/media/suzanne.8371d4f0.gltf\";","import React from 'react'\r\nimport { useGLTF } from '@react-three/drei'\r\nimport BaseModel from '../BaseModel'\r\n\r\nimport SuzanneModel from './suzanne.gltf'\r\n\r\nexport default function Suzanne(props) {\r\n\r\n  const { nodes, materials } = useGLTF(SuzanneModel)\r\n\r\n  return (\r\n    <BaseModel {...props} >\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Suzanne.geometry}\r\n        material={materials['Material.001.editable']}\r\n      />\r\n    </BaseModel>\r\n  )\r\n}\r\n\r\nuseGLTF.preload(SuzanneModel)","import React, { useState, useRef, Suspense, useEffect } from 'react'\r\n\r\nimport { useFrame } from '@react-three/fiber'\r\nimport { OrbitControls, ContactShadows } from '@react-three/drei'\r\n\r\nimport Environment from './Environment'\r\nimport Lighting from './Lighting'\r\n\r\n\r\n// IMPORT YOUR MODEL HERE\r\nimport Phone from '../models/mockups/Phone'\r\nimport Suzanne from '../models/mockups/Suzanne'\r\n\r\n\r\nfunction MockupScene({ groundShadows, objectShadows, orbitEnabled, doDownload, setDoDownload, width, height, tool, mockups, removeMockup }) {\r\n\r\n  const orbit = useRef()\r\n\r\n  const [activeModel, setActiveModel] = useState(null)\r\n\r\n  const [isCamSet, setIsCamSet] = useState(false)\r\n\r\n  const downloadImage = (state) => {\r\n    if (!doDownload) return\r\n    \r\n    const img = state.gl.domElement.toDataURL()\r\n    const link = document.createElement(\"a\");\r\n    link.href = img;\r\n    link.download = `mockup_${width}x${height}.png`;\r\n    link.click();\r\n\r\n    setDoDownload(false)\r\n  }\r\n\r\n  useFrame((state) => downloadImage(state))\r\n\r\n  useFrame(({camera}) => {\r\n    if (isCamSet) return\r\n    camera.position.set(-3, -1, 4)\r\n    camera.lookAt(0,0.7,0)\r\n    setIsCamSet(true)\r\n  })\r\n\r\n  const shorcutPressed = (evt) => {\r\n    if ([\"Backspace\", \"Delete\"].includes(evt.code)) {\r\n      if ([\"translate\", \"rotate\", \"scale\"].includes(tool) && activeModel) {\r\n        removeMockup(activeModel.mockupUuid)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keyup\", shorcutPressed)\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keyup\", shorcutPressed)\r\n    }\r\n  }, [activeModel])\r\n\r\n  const preset = \"bridge2\"\r\n\r\n  return (\r\n    <Suspense fallback={null}>\r\n      <scene>\r\n        <OrbitControls makeDefault enabled={orbitEnabled} ref={orbit} />\r\n\r\n        <Environment preset={preset} />\r\n        <Lighting shadows={objectShadows} />\r\n\r\n        <group position={[0, 0, 0]} dispose={null} >\r\n          {mockups.map(mockup => {\r\n            const mockupProps = { key: mockup.key, tool: tool, orbit: orbit, activeModel: activeModel, setActiveModel: setActiveModel, mockupUuid: mockup.key }\r\n\r\n            // ADD A CASE HERE WHEN ADDING A NEW MODEL. MAKE SURE TO PASS THE mockupProps AND USE THE SAME KEY AS IN modelNames\r\n            switch (mockup.type) {\r\n              case \"phone\":\r\n                return <Phone {...mockupProps} />\r\n              case \"suzanne\":\r\n                return <Suzanne {...mockupProps} />\r\n            }\r\n\r\n          })}\r\n        </group>\r\n\r\n        <ContactShadows rotation={[Math.PI / 2, 0, 0]} position={[0, -7, 0]} opacity={0.75} width={40} height={40} blur={1} far={9} />\r\n\r\n        {groundShadows && <mesh rotation={[-Math.PI / 2, 0, 0]} position={[0, 0, 0]} receiveShadow castShadow>\r\n          <planeBufferGeometry attach=\"geometry\" args={[15, 15]} />\r\n          <shadowMaterial attach=\"material\" opacity={.4} />\r\n        </mesh>}\r\n\r\n        {[\"translate\", \"rotate\", \"scale\"].includes(tool) && <gridHelper position={[0, 0, 0]} args={[15, 20, \"white\", \"#585858\"]}/>}\r\n      </scene>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\n\r\nexport default MockupScene;","import React from 'react';\r\nimport { Range } from 'react-range';\r\n\r\nexport default function Slider({ value, setValue, min, max, step=1 }) {\r\n\r\n  return (\r\n    <Range\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      values={[value]}\r\n      onChange={(values) => setValue(values[0]) }\r\n      renderTrack={({ props, children }) => (\r\n        <div\r\n          className=\"rangeBackground\"\r\n        >\r\n          <div\r\n            ref={props.ref}\r\n            className=\"rangeTrack\"\r\n          >\r\n            {children}\r\n          </div>\r\n        </div>\r\n      )}\r\n      renderThumb={({ props }) => (\r\n        <div\r\n          {...props}\r\n          className=\"rangeThumb\"\r\n        ></div>\r\n      )}\r\n    />\r\n  );\r\n}","import React, { useState, useRef, useEffect } from 'react'\r\n\r\nimport { Canvas } from '@react-three/fiber'\r\nimport { PerspectiveCamera } from '@react-three/drei'\r\n\r\nimport uuid from 'react-uuid'\r\nimport { FaCamera, FaAdjust, FaLightbulb, FaClone, FaLock, FaPlus, FaArrowsAlt, FaSyncAlt, FaCompressArrowsAlt, FaFillDrip, FaHandPaper, FaTimes } from 'react-icons/fa';\r\n\r\nimport './Scene.scss';\r\nimport MockupScene from './MockupScene';\r\nimport Slider from './Slider';\r\n\r\nimport { brightnessByColor } from './colorUtils';\r\n\r\n\r\n// ADD YOUR MODEL KEY AND DISPLAY NAME TO THIS LIST\r\nconst modelNames = {\r\n  phone: \"Smartphone\",\r\n  suzanne: \"Suzanne\"\r\n}\r\n\r\n\r\nfunction Scene() {\r\n\r\n  // VIEW SETTINGS\r\n  const [groundShadows, setGroundShadows] = useState(false)\r\n  const [objectShadows, setObjectShadows] = useState(true)\r\n\r\n  const [fov, setFov] = useState(20)\r\n\r\n  const [orbitEnabled, setOrbitEnabled] = useState(true)\r\n\r\n  const [hasAlpha, setHasAlpha] = useState(false)\r\n  const [color, setColor] = useState(\"\")\r\n  \r\n  const [mockups, setMockups] = useState([])\r\n\r\n  const [showAddModels, setShowAddModels] = useState(false)\r\n  \r\n  // REFS\r\n  const colorInpRef = useRef()\r\n  const widthInpRef = useRef()\r\n  const heightInpRef = useRef()\r\n\r\n  const canvasRef = useRef()\r\n\r\n  // TOOLS\r\n  const [doDownload, setDoDownload] = useState(false)\r\n  const tools = [\"grab\", \"materials\", \"translate\", \"rotate\", \"scale\"]\r\n  const [toolIndex, setToolIndex] = useState(1)\r\n\r\n\r\n  const shorcutPressed = (evt) => {\r\n    const codes = {\r\n      \"Space\": 0,\r\n      \"Digit1\": 0,\r\n      \"KeyM\": 1,\r\n      \"KeyF\": 1,\r\n      \"Digit2\": 1,\r\n      \"KeyQ\": 2,\r\n      \"KeyG\": 2,\r\n      \"Digit3\": 2,\r\n      \"KeyW\": 3,\r\n      \"KeyR\": 3,\r\n      \"Digit4\": 3,\r\n      \"KeyE\": 4,\r\n      \"KeyS\": 4,\r\n      \"Digit5\": 4,\r\n    }\r\n    if (evt.code in codes) {\r\n      setToolIndex(codes[evt.code])\r\n    }\r\n  }\r\n\r\n\r\n  const setBtnDarkness = () => {\r\n    const bright = brightnessByColor(colorInpRef.current.value)\r\n    if (bright > 128) {\r\n      document.body.classList.remove(\"dark\")\r\n    } else {\r\n      document.body.classList.add(\"dark\")\r\n    }\r\n  }\r\n  \r\n\r\n  const setBackgroundColor = () => {\r\n    document.getElementsByClassName(\"App\")[0].style.backgroundColor = colorInpRef.current.value\r\n    setColor(colorInpRef.current.value)\r\n\r\n    setHasAlpha(false)\r\n\r\n    setBtnDarkness()\r\n  }\r\n\r\n\r\n  const setCameraSize = () => {\r\n    const width = Math.max(1, widthInpRef.current.value)\r\n    const height = Math.max(1, heightInpRef.current.value)\r\n\r\n    const elem = document.getElementsByClassName(\"canvasContainer\")[0]\r\n    elem.style.width = `${width}px`\r\n    elem.style.height = `${height}px`\r\n    \r\n    const xScale = window.innerWidth / width\r\n    const yScale = window.innerHeight / height\r\n    let scale = Math.min(xScale, yScale)\r\n    scale = scale<1 ? scale-0.02 : 1\r\n\r\n    canvasRef.current.style.transform = `scale(${scale})`\r\n  }\r\n\r\n\r\n  const addMockup = (modelType) => {\r\n    setMockups(current => [...current, {key: uuid(), type: modelType}])\r\n    setShowAddModels(false)\r\n  }\r\n\r\n\r\n  const removeMockup = (uuid) => {\r\n    setMockups(current => current.filter(item => item.key !== uuid))\r\n  }\r\n\r\n\r\n  useEffect(() => { // set alpha\r\n    if (hasAlpha) {\r\n      document.getElementsByClassName(\"App\")[0].classList.add(\"alphaGrid\")\r\n      canvasRef.current.classList.add(\"alphaGrid\")\r\n      document.body.classList.remove(\"dark\")\r\n    } else {\r\n      document.getElementsByClassName(\"App\")[0].classList.remove(\"alphaGrid\")\r\n      canvasRef.current.classList.remove(\"alphaGrid\")\r\n      setBtnDarkness()\r\n    }\r\n  }, [hasAlpha])\r\n\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", setCameraSize)\r\n    window.addEventListener(\"keypress\", shorcutPressed)\r\n    \r\n    // set default camera size\r\n    // const size = Math.min(window.innerWidth-20, window.innerHeight-20)\r\n    widthInpRef.current.value = 1920\r\n    heightInpRef.current.value = 1080\r\n    \r\n    // set default fov\r\n    setFov(20)\r\n    \r\n    // set default background color\r\n    colorInpRef.current.value = \"#8A4CE6\"\r\n    setBackgroundColor()\r\n    \r\n    // set alpha default\r\n    setHasAlpha(true)\r\n    \r\n    // scale camera to initial size\r\n    setCameraSize()\r\n\r\n    // add default objects\r\n    addMockup(\"phone\")\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", setCameraSize)\r\n      window.removeEventListener(\"keypress\", shorcutPressed)\r\n    }\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"scene\">\r\n\r\n      <div className=\"toolbar\">\r\n        <button\r\n          className={toolIndex === 0 ? \"active\" : \"\"}\r\n          onClick={() => setToolIndex(0)}>\r\n            <FaHandPaper size={16} />\r\n        </button>\r\n        <div className=\"hSpacer\"></div>\r\n        <button\r\n          className={toolIndex === 1 ? \"active\" : \"\"}\r\n          onClick={() => setToolIndex(1)}>\r\n            <FaFillDrip size={16} />\r\n        </button>\r\n        <div className=\"hSpacer\"></div>\r\n        <button\r\n          className={toolIndex === 2 ? \"active\" : \"\"}\r\n          onClick={() => setToolIndex(2)}>\r\n            <FaArrowsAlt size={16} />\r\n        </button>\r\n        <button\r\n          className={toolIndex === 3 ? \"active\" : \"\"}\r\n          onClick={() => setToolIndex(3)}>\r\n            <FaSyncAlt size={16} />\r\n        </button>\r\n        <button\r\n          className={toolIndex === 4 ? \"active\" : \"\"}\r\n          onClick={() => setToolIndex(4)}>\r\n            <FaCompressArrowsAlt size={16} />\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"cameraSettings\">\r\n        <input type=\"number\" onChange={setCameraSize} ref={widthInpRef} />\r\n        <FaTimes size={16} />\r\n        <input type=\"number\" onChange={setCameraSize} ref={heightInpRef} />\r\n        <Slider value={fov} setValue={setFov} min={10} max={50} />\r\n      </div>\r\n\r\n      <div className=\"viewportSettings\">\r\n        <button\r\n          className={!hasAlpha ? \"active\" : \"\"}\r\n          onClick={() => setHasAlpha(!hasAlpha)}\r\n          tooltip=\"Background\">\r\n            <FaAdjust size={16} />\r\n        </button>\r\n        <input type=\"color\" onChange={setBackgroundColor} ref={colorInpRef} style={{backgroundColor: colorInpRef.current?.value}}></input> \r\n        <div className=\"hSpacer\"></div>\r\n        <button\r\n          className={objectShadows ? \"active\" : \"\"}\r\n          onClick={() => setObjectShadows(!objectShadows)}\r\n          tooltip=\"Shadows\">\r\n            <FaLightbulb size={16} />\r\n        </button>\r\n        <button\r\n          className={groundShadows && objectShadows ? \"active\" : \"\"}\r\n          onClick={() => setGroundShadows(!groundShadows)}\r\n          tooltip=\"Ground Shadows\">\r\n            <FaClone size={16} />\r\n        </button>\r\n      </div>\r\n\r\n      <button\r\n        className={!orbitEnabled ? \"lockViewBtn active\" : \"lockViewBtn\"}\r\n        onClick={() => setOrbitEnabled(!orbitEnabled)}>\r\n          <FaLock size={16} />\r\n      </button>\r\n\r\n      <div className=\"addPopup\" style={{transform: showAddModels ? 'scale(100%)' : 'scale(0%)' }}>\r\n        {Object.keys(modelNames).map(key => {\r\n          return <button key={key} className=\"addModelBtn\" onClick={() => addMockup(key)}>\r\n                  <FaPlus size={10} style={{marginRight:\"8px\"}}/>\r\n                  {modelNames[key]}\r\n                </button>\r\n        })}\r\n      </div>\r\n      \r\n      <button\r\n        className=\"addBtn\"\r\n        onClick={() => setShowAddModels(current => !current)}>\r\n          <FaPlus size={16}/>\r\n      </button>\r\n\r\n      <button\r\n        className=\"downloadBtn\"\r\n        onClick={() => setDoDownload(true)}>\r\n          <FaCamera size={16}/>\r\n      </button>\r\n\r\n      <div className=\"canvasContainer\">\r\n        <Canvas shadows ref={canvasRef} gl={{ preserveDrawingBuffer: true, antialias: true }} >\r\n\r\n          <PerspectiveCamera makeDefault fov={fov} position={[0, 0, 10]} />\r\n\r\n          <MockupScene\r\n            groundShadows={groundShadows}\r\n            objectShadows={objectShadows}\r\n            orbitEnabled={orbitEnabled}\r\n            doDownload={doDownload}\r\n            setDoDownload={setDoDownload}\r\n            width={widthInpRef.current ? widthInpRef.current.value : 0}\r\n            height={heightInpRef.current ? heightInpRef.current.value : 0}\r\n            tool={tools[toolIndex]}\r\n            mockups={mockups}\r\n            removeMockup={removeMockup}\r\n          />\r\n\r\n          {!hasAlpha && <color attach=\"background\" args={[color]} />}\r\n\r\n        </Canvas>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Scene;","import React, {  } from 'react';\nimport './App.scss';\n\nimport Scene from './components/scene/Scene';\n\nfunction App () {\n\n  return (\n    <div className=\"App\">\n      <Scene />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}